
test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c0  00800100  00001a28  00001abc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a28  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000035  008001c0  008001c0  00001b7c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001b7c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001bd8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00001c18  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000017ae  00000000  00000000  00001d30  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b16  00000000  00000000  000034de  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a51  00000000  00000000  00003ff4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000030c  00000000  00000000  00004a48  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000594  00000000  00000000  00004d54  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000805  00000000  00000000  000052e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  00005aed  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c8 00 	jmp	0x190	; 0x190 <__ctors_end>
       4:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
       8:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
       c:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
      10:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
      14:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
      18:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
      1c:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
      20:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
      24:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
      28:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
      2c:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
      30:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
      34:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
      38:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
      3c:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
      40:	0c 94 db 02 	jmp	0x5b6	; 0x5b6 <__vector_16>
      44:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
      48:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
      4c:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
      50:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
      54:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
      58:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
      5c:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
      60:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
      64:	0c 94 e5 00 	jmp	0x1ca	; 0x1ca <__bad_interrupt>
      68:	08 4a       	sbci	r16, 0xA8	; 168
      6a:	d7 3b       	cpi	r29, 0xB7	; 183
      6c:	3b ce       	rjmp	.-906    	; 0xfffffce4 <__eeprom_end+0xff7efce4>
      6e:	01 6e       	ori	r16, 0xE1	; 225
      70:	84 bc       	out	0x24, r8	; 36
      72:	bf fd       	.word	0xfdbf	; ????
      74:	c1 2f       	mov	r28, r17
      76:	3d 6c       	ori	r19, 0xCD	; 205
      78:	74 31       	cpi	r23, 0x14	; 20
      7a:	9a bd       	out	0x2a, r25	; 42
      7c:	56 83       	std	Z+6, r21	; 0x06
      7e:	3d da       	rcall	.-2950   	; 0xfffff4fa <__eeprom_end+0xff7ef4fa>
      80:	3d 00       	.word	0x003d	; ????
      82:	c7 7f       	andi	r28, 0xF7	; 247
      84:	11 be       	out	0x31, r1	; 49
      86:	d9 e4       	ldi	r29, 0x49	; 73
      88:	bb 4c       	sbci	r27, 0xCB	; 203
      8a:	3e 91       	ld	r19, -X
      8c:	6b aa       	std	Y+51, r6	; 0x33
      8e:	aa be       	out	0x3a, r10	; 58
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	3f 00       	.word	0x003f	; ????

00000096 <__trampolines_end>:
      96:	00 40       	sbci	r16, 0x00	; 0
      98:	7a 10       	cpse	r7, r10
      9a:	f3 5a       	subi	r31, 0xA3	; 163
      9c:	00 a0       	ldd	r0, Z+32	; 0x20
      9e:	72 4e       	sbci	r23, 0xE2	; 226
      a0:	18 09       	sbc	r17, r8
      a2:	00 10       	cpse	r0, r0
      a4:	a5 d4       	rcall	.+2378   	; 0x9f0 <RecieveDataFromGy86+0x16>
      a6:	e8 00       	.word	0x00e8	; ????
      a8:	00 e8       	ldi	r16, 0x80	; 128
      aa:	76 48       	sbci	r23, 0x86	; 134
      ac:	17 00       	.word	0x0017	; ????
      ae:	00 e4       	ldi	r16, 0x40	; 64
      b0:	0b 54       	subi	r16, 0x4B	; 75
      b2:	02 00       	.word	0x0002	; ????
      b4:	00 ca       	rjmp	.-3072   	; 0xfffff4b6 <__eeprom_end+0xff7ef4b6>
      b6:	9a 3b       	cpi	r25, 0xBA	; 186
      b8:	00 00       	nop
      ba:	00 e1       	ldi	r16, 0x10	; 16
      bc:	f5 05       	cpc	r31, r5
      be:	00 00       	nop
      c0:	80 96       	adiw	r24, 0x20	; 32
      c2:	98 00       	.word	0x0098	; ????
      c4:	00 00       	nop
      c6:	40 42       	sbci	r20, 0x20	; 32
      c8:	0f 00       	.word	0x000f	; ????
      ca:	00 00       	nop
      cc:	a0 86       	std	Z+8, r10	; 0x08
      ce:	01 00       	.word	0x0001	; ????
      d0:	00 00       	nop
      d2:	10 27       	eor	r17, r16
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	e8 03       	fmulsu	r22, r16
      da:	00 00       	nop
      dc:	00 00       	nop
      de:	64 00       	.word	0x0064	; ????
      e0:	00 00       	nop
      e2:	00 00       	nop
      e4:	0a 00       	.word	0x000a	; ????
      e6:	00 00       	nop
      e8:	00 00       	nop
      ea:	01 00       	.word	0x0001	; ????
      ec:	00 00       	nop
      ee:	00 00       	nop
      f0:	2c 76       	andi	r18, 0x6C	; 108
      f2:	d8 88       	ldd	r13, Y+16	; 0x10
      f4:	dc 67       	ori	r29, 0x7C	; 124
      f6:	4f 08       	sbc	r4, r15
      f8:	23 df       	rcall	.-442    	; 0xffffff40 <__eeprom_end+0xff7eff40>
      fa:	c1 df       	rcall	.-126    	; 0x7e <__SREG__+0x3f>
      fc:	ae 59       	subi	r26, 0x9E	; 158
      fe:	e1 b1       	in	r30, 0x01	; 1
     100:	b7 96       	adiw	r30, 0x27	; 39
     102:	e5 e3       	ldi	r30, 0x35	; 53
     104:	e4 53       	subi	r30, 0x34	; 52
     106:	c6 3a       	cpi	r28, 0xA6	; 166
     108:	e6 51       	subi	r30, 0x16	; 22
     10a:	99 76       	andi	r25, 0x69	; 105
     10c:	96 e8       	ldi	r25, 0x86	; 134
     10e:	e6 c2       	rjmp	.+1484   	; 0x6dc <PrintRawValues+0x100>
     110:	84 26       	eor	r8, r20
     112:	eb 89       	ldd	r30, Y+19	; 0x13
     114:	8c 9b       	sbis	0x11, 4	; 17
     116:	62 ed       	ldi	r22, 0xD2	; 210
     118:	40 7c       	andi	r20, 0xC0	; 192
     11a:	6f fc       	.word	0xfc6f	; ????
     11c:	ef bc       	out	0x2f, r14	; 47
     11e:	9c 9f       	mul	r25, r28
     120:	40 f2       	brcs	.-112    	; 0xb2 <__trampolines_end+0x1c>
     122:	ba a5       	ldd	r27, Y+42	; 0x2a
     124:	6f a5       	ldd	r22, Y+47	; 0x2f
     126:	f4 90       	lpm	r15, Z
     128:	05 5a       	subi	r16, 0xA5	; 165
     12a:	2a f7       	brpl	.-54     	; 0xf6 <__trampolines_end+0x60>
     12c:	5c 93       	st	X, r21
     12e:	6b 6c       	ori	r22, 0xCB	; 203
     130:	f9 67       	ori	r31, 0x79	; 121
     132:	6d c1       	rjmp	.+730    	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
     134:	1b fc       	.word	0xfc1b	; ????
     136:	e0 e4       	ldi	r30, 0x40	; 64
     138:	0d 47       	sbci	r16, 0x7D	; 125
     13a:	fe f5       	brtc	.+126    	; 0x1ba <.do_clear_bss_loop>
     13c:	20 e6       	ldi	r18, 0x60	; 96
     13e:	b5 00       	.word	0x00b5	; ????
     140:	d0 ed       	ldi	r29, 0xD0	; 208
     142:	90 2e       	mov	r9, r16
     144:	03 00       	.word	0x0003	; ????
     146:	94 35       	cpi	r25, 0x54	; 84
     148:	77 05       	cpc	r23, r7
     14a:	00 80       	ld	r0, Z
     14c:	84 1e       	adc	r8, r20
     14e:	08 00       	.word	0x0008	; ????
     150:	00 20       	and	r0, r0
     152:	4e 0a       	sbc	r4, r30
     154:	00 00       	nop
     156:	00 c8       	rjmp	.-4096   	; 0xfffff158 <__eeprom_end+0xff7ef158>
     158:	0c 33       	cpi	r16, 0x3C	; 60
     15a:	33 33       	cpi	r19, 0x33	; 51
     15c:	33 0f       	add	r19, r19
     15e:	98 6e       	ori	r25, 0xE8	; 232
     160:	12 83       	std	Z+2, r17	; 0x02
     162:	11 41       	sbci	r17, 0x11	; 17
     164:	ef 8d       	ldd	r30, Y+31	; 0x1f
     166:	21 14       	cp	r2, r1
     168:	89 3b       	cpi	r24, 0xB9	; 185
     16a:	e6 55       	subi	r30, 0x56	; 86
     16c:	16 cf       	rjmp	.-468    	; 0xffffff9a <__eeprom_end+0xff7eff9a>
     16e:	fe e6       	ldi	r31, 0x6E	; 110
     170:	db 18       	sub	r13, r11
     172:	d1 84       	ldd	r13, Z+9	; 0x09
     174:	4b 38       	cpi	r20, 0x8B	; 139
     176:	1b f7       	brvc	.-58     	; 0x13e <__trampolines_end+0xa8>
     178:	7c 1d       	adc	r23, r12
     17a:	90 1d       	adc	r25, r0
     17c:	a4 bb       	out	0x14, r26	; 20
     17e:	e4 24       	eor	r14, r4
     180:	20 32       	cpi	r18, 0x20	; 32
     182:	84 72       	andi	r24, 0x24	; 36
     184:	5e 22       	and	r5, r30
     186:	81 00       	.word	0x0081	; ????
     188:	c9 f1       	breq	.+114    	; 0x1fc <ReadRawValue+0x2e>
     18a:	24 ec       	ldi	r18, 0xC4	; 196
     18c:	a1 e5       	ldi	r26, 0x51	; 81
     18e:	3d 27       	eor	r19, r29

00000190 <__ctors_end>:
     190:	11 24       	eor	r1, r1
     192:	1f be       	out	0x3f, r1	; 63
     194:	cf ef       	ldi	r28, 0xFF	; 255
     196:	d8 e0       	ldi	r29, 0x08	; 8
     198:	de bf       	out	0x3e, r29	; 62
     19a:	cd bf       	out	0x3d, r28	; 61

0000019c <__do_copy_data>:
     19c:	11 e0       	ldi	r17, 0x01	; 1
     19e:	a0 e0       	ldi	r26, 0x00	; 0
     1a0:	b1 e0       	ldi	r27, 0x01	; 1
     1a2:	e8 e2       	ldi	r30, 0x28	; 40
     1a4:	fa e1       	ldi	r31, 0x1A	; 26
     1a6:	02 c0       	rjmp	.+4      	; 0x1ac <__do_copy_data+0x10>
     1a8:	05 90       	lpm	r0, Z+
     1aa:	0d 92       	st	X+, r0
     1ac:	a0 3c       	cpi	r26, 0xC0	; 192
     1ae:	b1 07       	cpc	r27, r17
     1b0:	d9 f7       	brne	.-10     	; 0x1a8 <__do_copy_data+0xc>

000001b2 <__do_clear_bss>:
     1b2:	21 e0       	ldi	r18, 0x01	; 1
     1b4:	a0 ec       	ldi	r26, 0xC0	; 192
     1b6:	b1 e0       	ldi	r27, 0x01	; 1
     1b8:	01 c0       	rjmp	.+2      	; 0x1bc <.do_clear_bss_start>

000001ba <.do_clear_bss_loop>:
     1ba:	1d 92       	st	X+, r1

000001bc <.do_clear_bss_start>:
     1bc:	a5 3f       	cpi	r26, 0xF5	; 245
     1be:	b2 07       	cpc	r27, r18
     1c0:	e1 f7       	brne	.-8      	; 0x1ba <.do_clear_bss_loop>
     1c2:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <main>
     1c6:	0c 94 12 0d 	jmp	0x1a24	; 0x1a24 <_exit>

000001ca <__bad_interrupt>:
     1ca:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001ce <ReadRawValue>:
	}
}


void ReadRawValue(void)
{
     1ce:	cf 93       	push	r28
     1d0:	df 93       	push	r29
	Xa = (((int)RecieveDataFromGy86(ACCEL_XOUT_H)<<8) | (int)RecieveDataFromGy86(ACCEL_XOUT_L)) / A_LSB;
     1d2:	8b e3       	ldi	r24, 0x3B	; 59
     1d4:	0e 94 ed 04 	call	0x9da	; 0x9da <RecieveDataFromGy86>
     1d8:	c8 2f       	mov	r28, r24
     1da:	d0 e0       	ldi	r29, 0x00	; 0
     1dc:	dc 2f       	mov	r29, r28
     1de:	cc 27       	eor	r28, r28
     1e0:	8c e3       	ldi	r24, 0x3C	; 60
     1e2:	0e 94 ed 04 	call	0x9da	; 0x9da <RecieveDataFromGy86>
     1e6:	be 01       	movw	r22, r28
     1e8:	68 2b       	or	r22, r24
     1ea:	07 2e       	mov	r0, r23
     1ec:	00 0c       	add	r0, r0
     1ee:	88 0b       	sbc	r24, r24
     1f0:	99 0b       	sbc	r25, r25
     1f2:	0e 94 aa 06 	call	0xd54	; 0xd54 <__floatsisf>
     1f6:	20 e0       	ldi	r18, 0x00	; 0
     1f8:	30 e0       	ldi	r19, 0x00	; 0
     1fa:	40 e8       	ldi	r20, 0x80	; 128
     1fc:	58 e3       	ldi	r21, 0x38	; 56
     1fe:	0e 94 65 07 	call	0xeca	; 0xeca <__mulsf3>
     202:	60 93 f1 01 	sts	0x01F1, r22	; 0x8001f1 <Xa>
     206:	70 93 f2 01 	sts	0x01F2, r23	; 0x8001f2 <Xa+0x1>
     20a:	80 93 f3 01 	sts	0x01F3, r24	; 0x8001f3 <Xa+0x2>
     20e:	90 93 f4 01 	sts	0x01F4, r25	; 0x8001f4 <Xa+0x3>
	Ya = (((int)RecieveDataFromGy86(ACCEL_YOUT_H)<<8) | (int)RecieveDataFromGy86(ACCEL_YOUT_L)) / A_LSB;
     212:	8d e3       	ldi	r24, 0x3D	; 61
     214:	0e 94 ed 04 	call	0x9da	; 0x9da <RecieveDataFromGy86>
     218:	c8 2f       	mov	r28, r24
     21a:	d0 e0       	ldi	r29, 0x00	; 0
     21c:	dc 2f       	mov	r29, r28
     21e:	cc 27       	eor	r28, r28
     220:	8e e3       	ldi	r24, 0x3E	; 62
     222:	0e 94 ed 04 	call	0x9da	; 0x9da <RecieveDataFromGy86>
     226:	be 01       	movw	r22, r28
     228:	68 2b       	or	r22, r24
     22a:	07 2e       	mov	r0, r23
     22c:	00 0c       	add	r0, r0
     22e:	88 0b       	sbc	r24, r24
     230:	99 0b       	sbc	r25, r25
     232:	0e 94 aa 06 	call	0xd54	; 0xd54 <__floatsisf>
     236:	20 e0       	ldi	r18, 0x00	; 0
     238:	30 e0       	ldi	r19, 0x00	; 0
     23a:	40 e8       	ldi	r20, 0x80	; 128
     23c:	58 e3       	ldi	r21, 0x38	; 56
     23e:	0e 94 65 07 	call	0xeca	; 0xeca <__mulsf3>
     242:	60 93 ed 01 	sts	0x01ED, r22	; 0x8001ed <Ya>
     246:	70 93 ee 01 	sts	0x01EE, r23	; 0x8001ee <Ya+0x1>
     24a:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <Ya+0x2>
     24e:	90 93 f0 01 	sts	0x01F0, r25	; 0x8001f0 <Ya+0x3>
	Za = (((int)RecieveDataFromGy86(ACCEL_ZOUT_H)<<8) | (int)RecieveDataFromGy86(ACCEL_ZOUT_L)) / A_LSB;
     252:	8f e3       	ldi	r24, 0x3F	; 63
     254:	0e 94 ed 04 	call	0x9da	; 0x9da <RecieveDataFromGy86>
     258:	c8 2f       	mov	r28, r24
     25a:	d0 e0       	ldi	r29, 0x00	; 0
     25c:	dc 2f       	mov	r29, r28
     25e:	cc 27       	eor	r28, r28
     260:	80 e4       	ldi	r24, 0x40	; 64
     262:	0e 94 ed 04 	call	0x9da	; 0x9da <RecieveDataFromGy86>
     266:	be 01       	movw	r22, r28
     268:	68 2b       	or	r22, r24
     26a:	07 2e       	mov	r0, r23
     26c:	00 0c       	add	r0, r0
     26e:	88 0b       	sbc	r24, r24
     270:	99 0b       	sbc	r25, r25
     272:	0e 94 aa 06 	call	0xd54	; 0xd54 <__floatsisf>
     276:	20 e0       	ldi	r18, 0x00	; 0
     278:	30 e0       	ldi	r19, 0x00	; 0
     27a:	40 e8       	ldi	r20, 0x80	; 128
     27c:	58 e3       	ldi	r21, 0x38	; 56
     27e:	0e 94 65 07 	call	0xeca	; 0xeca <__mulsf3>
     282:	60 93 e9 01 	sts	0x01E9, r22	; 0x8001e9 <Za>
     286:	70 93 ea 01 	sts	0x01EA, r23	; 0x8001ea <Za+0x1>
     28a:	80 93 eb 01 	sts	0x01EB, r24	; 0x8001eb <Za+0x2>
     28e:	90 93 ec 01 	sts	0x01EC, r25	; 0x8001ec <Za+0x3>
	
	Xg = (((int)RecieveDataFromGy86(GYRO_XOUT_H)<<8) | (int)RecieveDataFromGy86(GYRO_XOUT_L)) / G_LSB;
     292:	83 e4       	ldi	r24, 0x43	; 67
     294:	0e 94 ed 04 	call	0x9da	; 0x9da <RecieveDataFromGy86>
     298:	c8 2f       	mov	r28, r24
     29a:	d0 e0       	ldi	r29, 0x00	; 0
     29c:	dc 2f       	mov	r29, r28
     29e:	cc 27       	eor	r28, r28
     2a0:	84 e4       	ldi	r24, 0x44	; 68
     2a2:	0e 94 ed 04 	call	0x9da	; 0x9da <RecieveDataFromGy86>
     2a6:	be 01       	movw	r22, r28
     2a8:	68 2b       	or	r22, r24
     2aa:	07 2e       	mov	r0, r23
     2ac:	00 0c       	add	r0, r0
     2ae:	88 0b       	sbc	r24, r24
     2b0:	99 0b       	sbc	r25, r25
     2b2:	0e 94 aa 06 	call	0xd54	; 0xd54 <__floatsisf>
     2b6:	23 e3       	ldi	r18, 0x33	; 51
     2b8:	33 e3       	ldi	r19, 0x33	; 51
     2ba:	43 e8       	ldi	r20, 0x83	; 131
     2bc:	51 e4       	ldi	r21, 0x41	; 65
     2be:	0e 94 36 06 	call	0xc6c	; 0xc6c <__divsf3>
     2c2:	60 93 e1 01 	sts	0x01E1, r22	; 0x8001e1 <Xg>
     2c6:	70 93 e2 01 	sts	0x01E2, r23	; 0x8001e2 <Xg+0x1>
     2ca:	80 93 e3 01 	sts	0x01E3, r24	; 0x8001e3 <Xg+0x2>
     2ce:	90 93 e4 01 	sts	0x01E4, r25	; 0x8001e4 <Xg+0x3>
	Yg = (((int)RecieveDataFromGy86(GYRO_YOUT_H)<<8) | (int)RecieveDataFromGy86(GYRO_YOUT_L)) / G_LSB;
     2d2:	85 e4       	ldi	r24, 0x45	; 69
     2d4:	0e 94 ed 04 	call	0x9da	; 0x9da <RecieveDataFromGy86>
     2d8:	c8 2f       	mov	r28, r24
     2da:	d0 e0       	ldi	r29, 0x00	; 0
     2dc:	dc 2f       	mov	r29, r28
     2de:	cc 27       	eor	r28, r28
     2e0:	86 e4       	ldi	r24, 0x46	; 70
     2e2:	0e 94 ed 04 	call	0x9da	; 0x9da <RecieveDataFromGy86>
     2e6:	be 01       	movw	r22, r28
     2e8:	68 2b       	or	r22, r24
     2ea:	07 2e       	mov	r0, r23
     2ec:	00 0c       	add	r0, r0
     2ee:	88 0b       	sbc	r24, r24
     2f0:	99 0b       	sbc	r25, r25
     2f2:	0e 94 aa 06 	call	0xd54	; 0xd54 <__floatsisf>
     2f6:	23 e3       	ldi	r18, 0x33	; 51
     2f8:	33 e3       	ldi	r19, 0x33	; 51
     2fa:	43 e8       	ldi	r20, 0x83	; 131
     2fc:	51 e4       	ldi	r21, 0x41	; 65
     2fe:	0e 94 36 06 	call	0xc6c	; 0xc6c <__divsf3>
     302:	60 93 dd 01 	sts	0x01DD, r22	; 0x8001dd <Yg>
     306:	70 93 de 01 	sts	0x01DE, r23	; 0x8001de <Yg+0x1>
     30a:	80 93 df 01 	sts	0x01DF, r24	; 0x8001df <Yg+0x2>
     30e:	90 93 e0 01 	sts	0x01E0, r25	; 0x8001e0 <Yg+0x3>
	Zg = (((int)RecieveDataFromGy86(GYRO_ZOUT_H)<<8) | (int)RecieveDataFromGy86(GYRO_ZOUT_L)) / G_LSB;
     312:	87 e4       	ldi	r24, 0x47	; 71
     314:	0e 94 ed 04 	call	0x9da	; 0x9da <RecieveDataFromGy86>
     318:	c8 2f       	mov	r28, r24
     31a:	d0 e0       	ldi	r29, 0x00	; 0
     31c:	dc 2f       	mov	r29, r28
     31e:	cc 27       	eor	r28, r28
     320:	88 e4       	ldi	r24, 0x48	; 72
     322:	0e 94 ed 04 	call	0x9da	; 0x9da <RecieveDataFromGy86>
     326:	be 01       	movw	r22, r28
     328:	68 2b       	or	r22, r24
     32a:	07 2e       	mov	r0, r23
     32c:	00 0c       	add	r0, r0
     32e:	88 0b       	sbc	r24, r24
     330:	99 0b       	sbc	r25, r25
     332:	0e 94 aa 06 	call	0xd54	; 0xd54 <__floatsisf>
     336:	23 e3       	ldi	r18, 0x33	; 51
     338:	33 e3       	ldi	r19, 0x33	; 51
     33a:	43 e8       	ldi	r20, 0x83	; 131
     33c:	51 e4       	ldi	r21, 0x41	; 65
     33e:	0e 94 36 06 	call	0xc6c	; 0xc6c <__divsf3>
     342:	60 93 d9 01 	sts	0x01D9, r22	; 0x8001d9 <Zg>
     346:	70 93 da 01 	sts	0x01DA, r23	; 0x8001da <Zg+0x1>
     34a:	80 93 db 01 	sts	0x01DB, r24	; 0x8001db <Zg+0x2>
     34e:	90 93 dc 01 	sts	0x01DC, r25	; 0x8001dc <Zg+0x3>
	
	t = ((((int)RecieveDataFromGy86(TEMP_OUT_H)<<8) | (int)RecieveDataFromGy86(TEMP_OUT_L))/340.00)+36.53;
     352:	81 e4       	ldi	r24, 0x41	; 65
     354:	0e 94 ed 04 	call	0x9da	; 0x9da <RecieveDataFromGy86>
     358:	c8 2f       	mov	r28, r24
     35a:	d0 e0       	ldi	r29, 0x00	; 0
     35c:	dc 2f       	mov	r29, r28
     35e:	cc 27       	eor	r28, r28
     360:	82 e4       	ldi	r24, 0x42	; 66
     362:	0e 94 ed 04 	call	0x9da	; 0x9da <RecieveDataFromGy86>
     366:	be 01       	movw	r22, r28
     368:	68 2b       	or	r22, r24
     36a:	07 2e       	mov	r0, r23
     36c:	00 0c       	add	r0, r0
     36e:	88 0b       	sbc	r24, r24
     370:	99 0b       	sbc	r25, r25
     372:	0e 94 aa 06 	call	0xd54	; 0xd54 <__floatsisf>
     376:	20 e0       	ldi	r18, 0x00	; 0
     378:	30 e0       	ldi	r19, 0x00	; 0
     37a:	4a ea       	ldi	r20, 0xAA	; 170
     37c:	53 e4       	ldi	r21, 0x43	; 67
     37e:	0e 94 36 06 	call	0xc6c	; 0xc6c <__divsf3>
     382:	28 eb       	ldi	r18, 0xB8	; 184
     384:	3e e1       	ldi	r19, 0x1E	; 30
     386:	42 e1       	ldi	r20, 0x12	; 18
     388:	52 e4       	ldi	r21, 0x42	; 66
     38a:	0e 94 58 05 	call	0xab0	; 0xab0 <__addsf3>
     38e:	60 93 e5 01 	sts	0x01E5, r22	; 0x8001e5 <t>
     392:	70 93 e6 01 	sts	0x01E6, r23	; 0x8001e6 <t+0x1>
     396:	80 93 e7 01 	sts	0x01E7, r24	; 0x8001e7 <t+0x2>
     39a:	90 93 e8 01 	sts	0x01E8, r25	; 0x8001e8 <t+0x3>
}
     39e:	df 91       	pop	r29
     3a0:	cf 91       	pop	r28
     3a2:	08 95       	ret

000003a4 <CalculateError>:

void CalculateError(void)
{
     3a4:	cf 92       	push	r12
     3a6:	df 92       	push	r13
     3a8:	ef 92       	push	r14
     3aa:	ff 92       	push	r15
     3ac:	1f 93       	push	r17
     3ae:	cf 93       	push	r28
     3b0:	df 93       	push	r29
	// We can call this function in the setup section to calculate the accelerometer and gyro data error.
	// From here we will get the error values used in the above equations printed on the Monitor.
	// Note that we should place the IMU flat in order to get the proper values, so that we then can the correct values
	uint8_t c = 0;
     3b2:	10 e0       	ldi	r17, 0x00	; 0
	// Read gyro values 200 times
	
	while (c < 200)
     3b4:	ab c0       	rjmp	.+342    	; 0x50c <__EEPROM_REGION_LENGTH__+0x10c>
	{
		Xg = (((int)RecieveDataFromGy86(GYRO_XOUT_H)<<8) | (int)RecieveDataFromGy86(GYRO_XOUT_L)) / G_LSB;
     3b6:	83 e4       	ldi	r24, 0x43	; 67
     3b8:	0e 94 ed 04 	call	0x9da	; 0x9da <RecieveDataFromGy86>
     3bc:	c8 2f       	mov	r28, r24
     3be:	d0 e0       	ldi	r29, 0x00	; 0
     3c0:	dc 2f       	mov	r29, r28
     3c2:	cc 27       	eor	r28, r28
     3c4:	84 e4       	ldi	r24, 0x44	; 68
     3c6:	0e 94 ed 04 	call	0x9da	; 0x9da <RecieveDataFromGy86>
     3ca:	be 01       	movw	r22, r28
     3cc:	68 2b       	or	r22, r24
     3ce:	07 2e       	mov	r0, r23
     3d0:	00 0c       	add	r0, r0
     3d2:	88 0b       	sbc	r24, r24
     3d4:	99 0b       	sbc	r25, r25
     3d6:	0e 94 aa 06 	call	0xd54	; 0xd54 <__floatsisf>
     3da:	23 e3       	ldi	r18, 0x33	; 51
     3dc:	33 e3       	ldi	r19, 0x33	; 51
     3de:	43 e8       	ldi	r20, 0x83	; 131
     3e0:	51 e4       	ldi	r21, 0x41	; 65
     3e2:	0e 94 36 06 	call	0xc6c	; 0xc6c <__divsf3>
     3e6:	60 93 e1 01 	sts	0x01E1, r22	; 0x8001e1 <Xg>
     3ea:	70 93 e2 01 	sts	0x01E2, r23	; 0x8001e2 <Xg+0x1>
     3ee:	80 93 e3 01 	sts	0x01E3, r24	; 0x8001e3 <Xg+0x2>
     3f2:	90 93 e4 01 	sts	0x01E4, r25	; 0x8001e4 <Xg+0x3>
		Yg = (((int)RecieveDataFromGy86(GYRO_YOUT_H)<<8) | (int)RecieveDataFromGy86(GYRO_YOUT_L)) / G_LSB;
     3f6:	85 e4       	ldi	r24, 0x45	; 69
     3f8:	0e 94 ed 04 	call	0x9da	; 0x9da <RecieveDataFromGy86>
     3fc:	c8 2f       	mov	r28, r24
     3fe:	d0 e0       	ldi	r29, 0x00	; 0
     400:	dc 2f       	mov	r29, r28
     402:	cc 27       	eor	r28, r28
     404:	86 e4       	ldi	r24, 0x46	; 70
     406:	0e 94 ed 04 	call	0x9da	; 0x9da <RecieveDataFromGy86>
     40a:	be 01       	movw	r22, r28
     40c:	68 2b       	or	r22, r24
     40e:	07 2e       	mov	r0, r23
     410:	00 0c       	add	r0, r0
     412:	88 0b       	sbc	r24, r24
     414:	99 0b       	sbc	r25, r25
     416:	0e 94 aa 06 	call	0xd54	; 0xd54 <__floatsisf>
     41a:	23 e3       	ldi	r18, 0x33	; 51
     41c:	33 e3       	ldi	r19, 0x33	; 51
     41e:	43 e8       	ldi	r20, 0x83	; 131
     420:	51 e4       	ldi	r21, 0x41	; 65
     422:	0e 94 36 06 	call	0xc6c	; 0xc6c <__divsf3>
     426:	60 93 dd 01 	sts	0x01DD, r22	; 0x8001dd <Yg>
     42a:	70 93 de 01 	sts	0x01DE, r23	; 0x8001de <Yg+0x1>
     42e:	80 93 df 01 	sts	0x01DF, r24	; 0x8001df <Yg+0x2>
     432:	90 93 e0 01 	sts	0x01E0, r25	; 0x8001e0 <Yg+0x3>
		Zg = (((int)RecieveDataFromGy86(GYRO_ZOUT_H)<<8) | (int)RecieveDataFromGy86(GYRO_ZOUT_L)) / G_LSB;
     436:	87 e4       	ldi	r24, 0x47	; 71
     438:	0e 94 ed 04 	call	0x9da	; 0x9da <RecieveDataFromGy86>
     43c:	c8 2f       	mov	r28, r24
     43e:	d0 e0       	ldi	r29, 0x00	; 0
     440:	dc 2f       	mov	r29, r28
     442:	cc 27       	eor	r28, r28
     444:	88 e4       	ldi	r24, 0x48	; 72
     446:	0e 94 ed 04 	call	0x9da	; 0x9da <RecieveDataFromGy86>
     44a:	be 01       	movw	r22, r28
     44c:	68 2b       	or	r22, r24
     44e:	07 2e       	mov	r0, r23
     450:	00 0c       	add	r0, r0
     452:	88 0b       	sbc	r24, r24
     454:	99 0b       	sbc	r25, r25
     456:	0e 94 aa 06 	call	0xd54	; 0xd54 <__floatsisf>
     45a:	23 e3       	ldi	r18, 0x33	; 51
     45c:	33 e3       	ldi	r19, 0x33	; 51
     45e:	43 e8       	ldi	r20, 0x83	; 131
     460:	51 e4       	ldi	r21, 0x41	; 65
     462:	0e 94 36 06 	call	0xc6c	; 0xc6c <__divsf3>
     466:	6b 01       	movw	r12, r22
     468:	7c 01       	movw	r14, r24
     46a:	60 93 d9 01 	sts	0x01D9, r22	; 0x8001d9 <Zg>
     46e:	70 93 da 01 	sts	0x01DA, r23	; 0x8001da <Zg+0x1>
     472:	80 93 db 01 	sts	0x01DB, r24	; 0x8001db <Zg+0x2>
     476:	90 93 dc 01 	sts	0x01DC, r25	; 0x8001dc <Zg+0x3>
		// Sum all readings
		GyroErrorX = GyroErrorX + Xg;
     47a:	20 91 e1 01 	lds	r18, 0x01E1	; 0x8001e1 <Xg>
     47e:	30 91 e2 01 	lds	r19, 0x01E2	; 0x8001e2 <Xg+0x1>
     482:	40 91 e3 01 	lds	r20, 0x01E3	; 0x8001e3 <Xg+0x2>
     486:	50 91 e4 01 	lds	r21, 0x01E4	; 0x8001e4 <Xg+0x3>
     48a:	60 91 d5 01 	lds	r22, 0x01D5	; 0x8001d5 <GyroErrorX>
     48e:	70 91 d6 01 	lds	r23, 0x01D6	; 0x8001d6 <GyroErrorX+0x1>
     492:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <GyroErrorX+0x2>
     496:	90 91 d8 01 	lds	r25, 0x01D8	; 0x8001d8 <GyroErrorX+0x3>
     49a:	0e 94 58 05 	call	0xab0	; 0xab0 <__addsf3>
     49e:	60 93 d5 01 	sts	0x01D5, r22	; 0x8001d5 <GyroErrorX>
     4a2:	70 93 d6 01 	sts	0x01D6, r23	; 0x8001d6 <GyroErrorX+0x1>
     4a6:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <GyroErrorX+0x2>
     4aa:	90 93 d8 01 	sts	0x01D8, r25	; 0x8001d8 <GyroErrorX+0x3>
		GyroErrorY = GyroErrorY + Yg;
     4ae:	20 91 dd 01 	lds	r18, 0x01DD	; 0x8001dd <Yg>
     4b2:	30 91 de 01 	lds	r19, 0x01DE	; 0x8001de <Yg+0x1>
     4b6:	40 91 df 01 	lds	r20, 0x01DF	; 0x8001df <Yg+0x2>
     4ba:	50 91 e0 01 	lds	r21, 0x01E0	; 0x8001e0 <Yg+0x3>
     4be:	60 91 d1 01 	lds	r22, 0x01D1	; 0x8001d1 <GyroErrorY>
     4c2:	70 91 d2 01 	lds	r23, 0x01D2	; 0x8001d2 <GyroErrorY+0x1>
     4c6:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <GyroErrorY+0x2>
     4ca:	90 91 d4 01 	lds	r25, 0x01D4	; 0x8001d4 <GyroErrorY+0x3>
     4ce:	0e 94 58 05 	call	0xab0	; 0xab0 <__addsf3>
     4d2:	60 93 d1 01 	sts	0x01D1, r22	; 0x8001d1 <GyroErrorY>
     4d6:	70 93 d2 01 	sts	0x01D2, r23	; 0x8001d2 <GyroErrorY+0x1>
     4da:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <GyroErrorY+0x2>
     4de:	90 93 d4 01 	sts	0x01D4, r25	; 0x8001d4 <GyroErrorY+0x3>
		GyroErrorZ = GyroErrorZ + Zg;
     4e2:	20 91 cd 01 	lds	r18, 0x01CD	; 0x8001cd <GyroErrorZ>
     4e6:	30 91 ce 01 	lds	r19, 0x01CE	; 0x8001ce <GyroErrorZ+0x1>
     4ea:	40 91 cf 01 	lds	r20, 0x01CF	; 0x8001cf <GyroErrorZ+0x2>
     4ee:	50 91 d0 01 	lds	r21, 0x01D0	; 0x8001d0 <GyroErrorZ+0x3>
     4f2:	c7 01       	movw	r24, r14
     4f4:	b6 01       	movw	r22, r12
     4f6:	0e 94 58 05 	call	0xab0	; 0xab0 <__addsf3>
     4fa:	60 93 cd 01 	sts	0x01CD, r22	; 0x8001cd <GyroErrorZ>
     4fe:	70 93 ce 01 	sts	0x01CE, r23	; 0x8001ce <GyroErrorZ+0x1>
     502:	80 93 cf 01 	sts	0x01CF, r24	; 0x8001cf <GyroErrorZ+0x2>
     506:	90 93 d0 01 	sts	0x01D0, r25	; 0x8001d0 <GyroErrorZ+0x3>
		c++;
     50a:	1f 5f       	subi	r17, 0xFF	; 255
	// From here we will get the error values used in the above equations printed on the Monitor.
	// Note that we should place the IMU flat in order to get the proper values, so that we then can the correct values
	uint8_t c = 0;
	// Read gyro values 200 times
	
	while (c < 200)
     50c:	18 3c       	cpi	r17, 0xC8	; 200
     50e:	08 f4       	brcc	.+2      	; 0x512 <__EEPROM_REGION_LENGTH__+0x112>
     510:	52 cf       	rjmp	.-348    	; 0x3b6 <CalculateError+0x12>
		GyroErrorY = GyroErrorY + Yg;
		GyroErrorZ = GyroErrorZ + Zg;
		c++;
	}
	//Divide the sum by 200 to get the error value
	GyroErrorX = GyroErrorX / 200;
     512:	20 e0       	ldi	r18, 0x00	; 0
     514:	30 e0       	ldi	r19, 0x00	; 0
     516:	48 e4       	ldi	r20, 0x48	; 72
     518:	53 e4       	ldi	r21, 0x43	; 67
     51a:	60 91 d5 01 	lds	r22, 0x01D5	; 0x8001d5 <GyroErrorX>
     51e:	70 91 d6 01 	lds	r23, 0x01D6	; 0x8001d6 <GyroErrorX+0x1>
     522:	80 91 d7 01 	lds	r24, 0x01D7	; 0x8001d7 <GyroErrorX+0x2>
     526:	90 91 d8 01 	lds	r25, 0x01D8	; 0x8001d8 <GyroErrorX+0x3>
     52a:	0e 94 36 06 	call	0xc6c	; 0xc6c <__divsf3>
     52e:	60 93 d5 01 	sts	0x01D5, r22	; 0x8001d5 <GyroErrorX>
     532:	70 93 d6 01 	sts	0x01D6, r23	; 0x8001d6 <GyroErrorX+0x1>
     536:	80 93 d7 01 	sts	0x01D7, r24	; 0x8001d7 <GyroErrorX+0x2>
     53a:	90 93 d8 01 	sts	0x01D8, r25	; 0x8001d8 <GyroErrorX+0x3>
	GyroErrorY = GyroErrorY / 200;
     53e:	20 e0       	ldi	r18, 0x00	; 0
     540:	30 e0       	ldi	r19, 0x00	; 0
     542:	48 e4       	ldi	r20, 0x48	; 72
     544:	53 e4       	ldi	r21, 0x43	; 67
     546:	60 91 d1 01 	lds	r22, 0x01D1	; 0x8001d1 <GyroErrorY>
     54a:	70 91 d2 01 	lds	r23, 0x01D2	; 0x8001d2 <GyroErrorY+0x1>
     54e:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <GyroErrorY+0x2>
     552:	90 91 d4 01 	lds	r25, 0x01D4	; 0x8001d4 <GyroErrorY+0x3>
     556:	0e 94 36 06 	call	0xc6c	; 0xc6c <__divsf3>
     55a:	60 93 d1 01 	sts	0x01D1, r22	; 0x8001d1 <GyroErrorY>
     55e:	70 93 d2 01 	sts	0x01D2, r23	; 0x8001d2 <GyroErrorY+0x1>
     562:	80 93 d3 01 	sts	0x01D3, r24	; 0x8001d3 <GyroErrorY+0x2>
     566:	90 93 d4 01 	sts	0x01D4, r25	; 0x8001d4 <GyroErrorY+0x3>
	GyroErrorZ = GyroErrorZ / 200;
     56a:	20 e0       	ldi	r18, 0x00	; 0
     56c:	30 e0       	ldi	r19, 0x00	; 0
     56e:	48 e4       	ldi	r20, 0x48	; 72
     570:	53 e4       	ldi	r21, 0x43	; 67
     572:	60 91 cd 01 	lds	r22, 0x01CD	; 0x8001cd <GyroErrorZ>
     576:	70 91 ce 01 	lds	r23, 0x01CE	; 0x8001ce <GyroErrorZ+0x1>
     57a:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <GyroErrorZ+0x2>
     57e:	90 91 d0 01 	lds	r25, 0x01D0	; 0x8001d0 <GyroErrorZ+0x3>
     582:	0e 94 36 06 	call	0xc6c	; 0xc6c <__divsf3>
     586:	60 93 cd 01 	sts	0x01CD, r22	; 0x8001cd <GyroErrorZ>
     58a:	70 93 ce 01 	sts	0x01CE, r23	; 0x8001ce <GyroErrorZ+0x1>
     58e:	80 93 cf 01 	sts	0x01CF, r24	; 0x8001cf <GyroErrorZ+0x2>
     592:	90 93 d0 01 	sts	0x01D0, r25	; 0x8001d0 <GyroErrorZ+0x3>
}
     596:	df 91       	pop	r29
     598:	cf 91       	pop	r28
     59a:	1f 91       	pop	r17
     59c:	ff 90       	pop	r15
     59e:	ef 90       	pop	r14
     5a0:	df 90       	pop	r13
     5a2:	cf 90       	pop	r12
     5a4:	08 95       	ret

000005a6 <TimerInit>:

void TimerInit(void)
{
	TCCR0B = (1<<CS00) | (1<<CS01); // F_CPU/64 from prescaler
     5a6:	83 e0       	ldi	r24, 0x03	; 3
     5a8:	85 bd       	out	0x25, r24	; 37
	TIMSK0 = (1<<TOIE0); //local interrupt 
     5aa:	81 e0       	ldi	r24, 0x01	; 1
     5ac:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
	TCNT0 = 6;	
     5b0:	86 e0       	ldi	r24, 0x06	; 6
     5b2:	86 bd       	out	0x26, r24	; 38
     5b4:	08 95       	ret

000005b6 <__vector_16>:
}

ISR(TIMER0_OVF_vect)
{
     5b6:	1f 92       	push	r1
     5b8:	0f 92       	push	r0
     5ba:	0f b6       	in	r0, 0x3f	; 63
     5bc:	0f 92       	push	r0
     5be:	11 24       	eor	r1, r1
     5c0:	8f 93       	push	r24
	TCNT0 = 6; // 256-250 = 6
     5c2:	86 e0       	ldi	r24, 0x06	; 6
     5c4:	86 bd       	out	0x26, r24	; 38
	millis++;
     5c6:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <__data_end>
     5ca:	8f 5f       	subi	r24, 0xFF	; 255
     5cc:	80 93 c0 01 	sts	0x01C0, r24	; 0x8001c0 <__data_end>
}
     5d0:	8f 91       	pop	r24
     5d2:	0f 90       	pop	r0
     5d4:	0f be       	out	0x3f, r0	; 63
     5d6:	0f 90       	pop	r0
     5d8:	1f 90       	pop	r1
     5da:	18 95       	reti

000005dc <PrintRawValues>:

void PrintRawValues(void)
{
     5dc:	cf 92       	push	r12
     5de:	df 92       	push	r13
     5e0:	ef 92       	push	r14
     5e2:	ff 92       	push	r15
     5e4:	0f 93       	push	r16
     5e6:	1f 93       	push	r17
     5e8:	cf 93       	push	r28
     5ea:	df 93       	push	r29
     5ec:	cd b7       	in	r28, 0x3d	; 61
     5ee:	de b7       	in	r29, 0x3e	; 62
     5f0:	6e 97       	sbiw	r28, 0x1e	; 30
     5f2:	0f b6       	in	r0, 0x3f	; 63
     5f4:	f8 94       	cli
     5f6:	de bf       	out	0x3e, r29	; 62
     5f8:	0f be       	out	0x3f, r0	; 63
     5fa:	cd bf       	out	0x3d, r28	; 61
	char buffer[20], float_[10];
	/* Take values in buffer to send all parameters over USART */
	dtostrf( Xa, 3, 2, float_ );
     5fc:	7e 01       	movw	r14, r28
     5fe:	85 e1       	ldi	r24, 0x15	; 21
     600:	e8 0e       	add	r14, r24
     602:	f1 1c       	adc	r15, r1
     604:	60 91 f1 01 	lds	r22, 0x01F1	; 0x8001f1 <Xa>
     608:	70 91 f2 01 	lds	r23, 0x01F2	; 0x8001f2 <Xa+0x1>
     60c:	80 91 f3 01 	lds	r24, 0x01F3	; 0x8001f3 <Xa+0x2>
     610:	90 91 f4 01 	lds	r25, 0x01F4	; 0x8001f4 <Xa+0x3>
     614:	87 01       	movw	r16, r14
     616:	22 e0       	ldi	r18, 0x02	; 2
     618:	30 e0       	ldi	r19, 0x00	; 0
     61a:	43 e0       	ldi	r20, 0x03	; 3
     61c:	50 e0       	ldi	r21, 0x00	; 0
     61e:	0e 94 d6 07 	call	0xfac	; 0xfac <dtostrf>
	sprintf(buffer," Ax = %s g\t",float_);
     622:	ff 92       	push	r15
     624:	ef 92       	push	r14
     626:	80 e0       	ldi	r24, 0x00	; 0
     628:	91 e0       	ldi	r25, 0x01	; 1
     62a:	9f 93       	push	r25
     62c:	8f 93       	push	r24
     62e:	ce 01       	movw	r24, r28
     630:	01 96       	adiw	r24, 0x01	; 1
     632:	6c 01       	movw	r12, r24
     634:	9f 93       	push	r25
     636:	8f 93       	push	r24
     638:	0e 94 f6 07 	call	0xfec	; 0xfec <sprintf>
	UartSendString(buffer);
     63c:	c6 01       	movw	r24, r12
     63e:	0e 94 2e 05 	call	0xa5c	; 0xa5c <UartSendString>
	
	dtostrf( Ya, 3, 2, float_ );
     642:	60 91 ed 01 	lds	r22, 0x01ED	; 0x8001ed <Ya>
     646:	70 91 ee 01 	lds	r23, 0x01EE	; 0x8001ee <Ya+0x1>
     64a:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <Ya+0x2>
     64e:	90 91 f0 01 	lds	r25, 0x01F0	; 0x8001f0 <Ya+0x3>
     652:	22 e0       	ldi	r18, 0x02	; 2
     654:	30 e0       	ldi	r19, 0x00	; 0
     656:	43 e0       	ldi	r20, 0x03	; 3
     658:	50 e0       	ldi	r21, 0x00	; 0
     65a:	0e 94 d6 07 	call	0xfac	; 0xfac <dtostrf>
	sprintf(buffer," Ay = %s g\t",float_);
     65e:	ff 92       	push	r15
     660:	ef 92       	push	r14
     662:	8c e0       	ldi	r24, 0x0C	; 12
     664:	91 e0       	ldi	r25, 0x01	; 1
     666:	9f 93       	push	r25
     668:	8f 93       	push	r24
     66a:	df 92       	push	r13
     66c:	cf 92       	push	r12
     66e:	0e 94 f6 07 	call	0xfec	; 0xfec <sprintf>
	UartSendString(buffer);
     672:	c6 01       	movw	r24, r12
     674:	0e 94 2e 05 	call	0xa5c	; 0xa5c <UartSendString>
	
	dtostrf( Za, 3, 2, float_ );
     678:	60 91 e9 01 	lds	r22, 0x01E9	; 0x8001e9 <Za>
     67c:	70 91 ea 01 	lds	r23, 0x01EA	; 0x8001ea <Za+0x1>
     680:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <Za+0x2>
     684:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <Za+0x3>
     688:	22 e0       	ldi	r18, 0x02	; 2
     68a:	30 e0       	ldi	r19, 0x00	; 0
     68c:	43 e0       	ldi	r20, 0x03	; 3
     68e:	50 e0       	ldi	r21, 0x00	; 0
     690:	0e 94 d6 07 	call	0xfac	; 0xfac <dtostrf>
	sprintf(buffer," Az = %s g\t",float_);
     694:	ff 92       	push	r15
     696:	ef 92       	push	r14
     698:	88 e1       	ldi	r24, 0x18	; 24
     69a:	91 e0       	ldi	r25, 0x01	; 1
     69c:	9f 93       	push	r25
     69e:	8f 93       	push	r24
     6a0:	df 92       	push	r13
     6a2:	cf 92       	push	r12
     6a4:	0e 94 f6 07 	call	0xfec	; 0xfec <sprintf>
	UartSendString(buffer);
     6a8:	c6 01       	movw	r24, r12
     6aa:	0e 94 2e 05 	call	0xa5c	; 0xa5c <UartSendString>
	
	dtostrf( t, 3, 2, float_ );
     6ae:	60 91 e5 01 	lds	r22, 0x01E5	; 0x8001e5 <t>
     6b2:	70 91 e6 01 	lds	r23, 0x01E6	; 0x8001e6 <t+0x1>
     6b6:	80 91 e7 01 	lds	r24, 0x01E7	; 0x8001e7 <t+0x2>
     6ba:	90 91 e8 01 	lds	r25, 0x01E8	; 0x8001e8 <t+0x3>
     6be:	22 e0       	ldi	r18, 0x02	; 2
     6c0:	30 e0       	ldi	r19, 0x00	; 0
     6c2:	43 e0       	ldi	r20, 0x03	; 3
     6c4:	50 e0       	ldi	r21, 0x00	; 0
     6c6:	0e 94 d6 07 	call	0xfac	; 0xfac <dtostrf>
	/* 0xF8 Ascii value of degree on serial */
	sprintf(buffer," T = %s C\t",float_);
     6ca:	ff 92       	push	r15
     6cc:	ef 92       	push	r14
     6ce:	84 e2       	ldi	r24, 0x24	; 36
     6d0:	91 e0       	ldi	r25, 0x01	; 1
     6d2:	9f 93       	push	r25
     6d4:	8f 93       	push	r24
     6d6:	df 92       	push	r13
     6d8:	cf 92       	push	r12
     6da:	0e 94 f6 07 	call	0xfec	; 0xfec <sprintf>
	UartSendString(buffer);
     6de:	c6 01       	movw	r24, r12
     6e0:	0e 94 2e 05 	call	0xa5c	; 0xa5c <UartSendString>
	
	dtostrf( Xg, 3, 2, float_ );
     6e4:	60 91 e1 01 	lds	r22, 0x01E1	; 0x8001e1 <Xg>
     6e8:	70 91 e2 01 	lds	r23, 0x01E2	; 0x8001e2 <Xg+0x1>
     6ec:	80 91 e3 01 	lds	r24, 0x01E3	; 0x8001e3 <Xg+0x2>
     6f0:	90 91 e4 01 	lds	r25, 0x01E4	; 0x8001e4 <Xg+0x3>
     6f4:	22 e0       	ldi	r18, 0x02	; 2
     6f6:	30 e0       	ldi	r19, 0x00	; 0
     6f8:	43 e0       	ldi	r20, 0x03	; 3
     6fa:	50 e0       	ldi	r21, 0x00	; 0
     6fc:	0e 94 d6 07 	call	0xfac	; 0xfac <dtostrf>
	sprintf(buffer," Gx = %s d/s\t",float_);
     700:	ff 92       	push	r15
     702:	ef 92       	push	r14
     704:	8f e2       	ldi	r24, 0x2F	; 47
     706:	91 e0       	ldi	r25, 0x01	; 1
     708:	9f 93       	push	r25
     70a:	8f 93       	push	r24
     70c:	df 92       	push	r13
     70e:	cf 92       	push	r12
     710:	0e 94 f6 07 	call	0xfec	; 0xfec <sprintf>
	UartSendString(buffer);
     714:	c6 01       	movw	r24, r12
     716:	0e 94 2e 05 	call	0xa5c	; 0xa5c <UartSendString>
	
	dtostrf( Yg, 3, 2, float_ );
     71a:	60 91 dd 01 	lds	r22, 0x01DD	; 0x8001dd <Yg>
     71e:	70 91 de 01 	lds	r23, 0x01DE	; 0x8001de <Yg+0x1>
     722:	80 91 df 01 	lds	r24, 0x01DF	; 0x8001df <Yg+0x2>
     726:	90 91 e0 01 	lds	r25, 0x01E0	; 0x8001e0 <Yg+0x3>
     72a:	22 e0       	ldi	r18, 0x02	; 2
     72c:	30 e0       	ldi	r19, 0x00	; 0
     72e:	43 e0       	ldi	r20, 0x03	; 3
     730:	50 e0       	ldi	r21, 0x00	; 0
     732:	0e 94 d6 07 	call	0xfac	; 0xfac <dtostrf>
	sprintf(buffer," Gy = %s d/s\t",float_);
     736:	ff 92       	push	r15
     738:	ef 92       	push	r14
     73a:	8d e3       	ldi	r24, 0x3D	; 61
     73c:	91 e0       	ldi	r25, 0x01	; 1
     73e:	9f 93       	push	r25
     740:	8f 93       	push	r24
     742:	df 92       	push	r13
     744:	cf 92       	push	r12
     746:	0e 94 f6 07 	call	0xfec	; 0xfec <sprintf>
	UartSendString(buffer);
     74a:	0f b6       	in	r0, 0x3f	; 63
     74c:	f8 94       	cli
     74e:	de bf       	out	0x3e, r29	; 62
     750:	0f be       	out	0x3f, r0	; 63
     752:	cd bf       	out	0x3d, r28	; 61
     754:	c6 01       	movw	r24, r12
     756:	0e 94 2e 05 	call	0xa5c	; 0xa5c <UartSendString>
	
	dtostrf( Zg, 3, 2, float_ );
     75a:	60 91 d9 01 	lds	r22, 0x01D9	; 0x8001d9 <Zg>
     75e:	70 91 da 01 	lds	r23, 0x01DA	; 0x8001da <Zg+0x1>
     762:	80 91 db 01 	lds	r24, 0x01DB	; 0x8001db <Zg+0x2>
     766:	90 91 dc 01 	lds	r25, 0x01DC	; 0x8001dc <Zg+0x3>
     76a:	22 e0       	ldi	r18, 0x02	; 2
     76c:	30 e0       	ldi	r19, 0x00	; 0
     76e:	43 e0       	ldi	r20, 0x03	; 3
     770:	50 e0       	ldi	r21, 0x00	; 0
     772:	0e 94 d6 07 	call	0xfac	; 0xfac <dtostrf>
	sprintf(buffer," Gz = %s d/s\r\n",float_);
     776:	ff 92       	push	r15
     778:	ef 92       	push	r14
     77a:	8b e4       	ldi	r24, 0x4B	; 75
     77c:	91 e0       	ldi	r25, 0x01	; 1
     77e:	9f 93       	push	r25
     780:	8f 93       	push	r24
     782:	df 92       	push	r13
     784:	cf 92       	push	r12
     786:	0e 94 f6 07 	call	0xfec	; 0xfec <sprintf>
	UartSendString(buffer);
     78a:	c6 01       	movw	r24, r12
     78c:	0e 94 2e 05 	call	0xa5c	; 0xa5c <UartSendString>
	
	UartSendChar('\n');
     790:	8a e0       	ldi	r24, 0x0A	; 10
     792:	0e 94 27 05 	call	0xa4e	; 0xa4e <UartSendChar>
}
     796:	0f 90       	pop	r0
     798:	0f 90       	pop	r0
     79a:	0f 90       	pop	r0
     79c:	0f 90       	pop	r0
     79e:	0f 90       	pop	r0
     7a0:	0f 90       	pop	r0
     7a2:	6e 96       	adiw	r28, 0x1e	; 30
     7a4:	0f b6       	in	r0, 0x3f	; 63
     7a6:	f8 94       	cli
     7a8:	de bf       	out	0x3e, r29	; 62
     7aa:	0f be       	out	0x3f, r0	; 63
     7ac:	cd bf       	out	0x3d, r28	; 61
     7ae:	df 91       	pop	r29
     7b0:	cf 91       	pop	r28
     7b2:	1f 91       	pop	r17
     7b4:	0f 91       	pop	r16
     7b6:	ff 90       	pop	r15
     7b8:	ef 90       	pop	r14
     7ba:	df 90       	pop	r13
     7bc:	cf 90       	pop	r12
     7be:	08 95       	ret

000007c0 <main>:
	
	

int main (void)
{
	Gy86Init();
     7c0:	0e 94 05 05 	call	0xa0a	; 0xa0a <Gy86Init>
	GyroInit();
     7c4:	0e 94 09 05 	call	0xa12	; 0xa12 <GyroInit>
	UartInit();
     7c8:	0e 94 3b 05 	call	0xa76	; 0xa76 <UartInit>
	CalculateError();
     7cc:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <CalculateError>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7d0:	2f ef       	ldi	r18, 0xFF	; 255
     7d2:	89 ef       	ldi	r24, 0xF9	; 249
     7d4:	90 e0       	ldi	r25, 0x00	; 0
     7d6:	21 50       	subi	r18, 0x01	; 1
     7d8:	80 40       	sbci	r24, 0x00	; 0
     7da:	90 40       	sbci	r25, 0x00	; 0
     7dc:	e1 f7       	brne	.-8      	; 0x7d6 <main+0x16>
     7de:	00 c0       	rjmp	.+0      	; 0x7e0 <main+0x20>
     7e0:	00 00       	nop
	_delay_ms(20);
	TimerInit();
     7e2:	0e 94 d3 02 	call	0x5a6	; 0x5a6 <TimerInit>
	sei();
     7e6:	78 94       	sei
	
	while(1)
	{
		
		ReadRawValue();
     7e8:	0e 94 e7 00 	call	0x1ce	; 0x1ce <ReadRawValue>
		if (millis >= 11)
     7ec:	c0 91 c0 01 	lds	r28, 0x01C0	; 0x8001c0 <__data_end>
     7f0:	cb 30       	cpi	r28, 0x0B	; 11
     7f2:	d0 f3       	brcs	.-12     	; 0x7e8 <main+0x28>
		{
			// Calculating Roll and Pitch from the accelerometer data
			accAngle = (atan2f(Xa, Ya)) * RAD_TO_DEG;
     7f4:	20 91 ed 01 	lds	r18, 0x01ED	; 0x8001ed <Ya>
     7f8:	30 91 ee 01 	lds	r19, 0x01EE	; 0x8001ee <Ya+0x1>
     7fc:	40 91 ef 01 	lds	r20, 0x01EF	; 0x8001ef <Ya+0x2>
     800:	50 91 f0 01 	lds	r21, 0x01F0	; 0x8001f0 <Ya+0x3>
     804:	60 91 f1 01 	lds	r22, 0x01F1	; 0x8001f1 <Xa>
     808:	70 91 f2 01 	lds	r23, 0x01F2	; 0x8001f2 <Xa+0x1>
     80c:	80 91 f3 01 	lds	r24, 0x01F3	; 0x8001f3 <Xa+0x2>
     810:	90 91 f4 01 	lds	r25, 0x01F4	; 0x8001f4 <Xa+0x3>
     814:	0e 94 d7 05 	call	0xbae	; 0xbae <atan2>
     818:	21 ee       	ldi	r18, 0xE1	; 225
     81a:	3e e2       	ldi	r19, 0x2E	; 46
     81c:	45 e6       	ldi	r20, 0x65	; 101
     81e:	52 e4       	ldi	r21, 0x42	; 66
     820:	0e 94 65 07 	call	0xeca	; 0xeca <__mulsf3>
     824:	6b 01       	movw	r12, r22
     826:	7c 01       	movw	r14, r24
     828:	60 93 c9 01 	sts	0x01C9, r22	; 0x8001c9 <accAngle>
     82c:	70 93 ca 01 	sts	0x01CA, r23	; 0x8001ca <accAngle+0x1>
     830:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <accAngle+0x2>
     834:	90 93 cc 01 	sts	0x01CC, r25	; 0x8001cc <accAngle+0x3>
			// Correct the outputs with the calculated error values
			Xg = Xg - GyroErrorX;
     838:	20 91 d5 01 	lds	r18, 0x01D5	; 0x8001d5 <GyroErrorX>
     83c:	30 91 d6 01 	lds	r19, 0x01D6	; 0x8001d6 <GyroErrorX+0x1>
     840:	40 91 d7 01 	lds	r20, 0x01D7	; 0x8001d7 <GyroErrorX+0x2>
     844:	50 91 d8 01 	lds	r21, 0x01D8	; 0x8001d8 <GyroErrorX+0x3>
     848:	60 91 e1 01 	lds	r22, 0x01E1	; 0x8001e1 <Xg>
     84c:	70 91 e2 01 	lds	r23, 0x01E2	; 0x8001e2 <Xg+0x1>
     850:	80 91 e3 01 	lds	r24, 0x01E3	; 0x8001e3 <Xg+0x2>
     854:	90 91 e4 01 	lds	r25, 0x01E4	; 0x8001e4 <Xg+0x3>
     858:	0e 94 57 05 	call	0xaae	; 0xaae <__subsf3>
     85c:	60 93 e1 01 	sts	0x01E1, r22	; 0x8001e1 <Xg>
     860:	70 93 e2 01 	sts	0x01E2, r23	; 0x8001e2 <Xg+0x1>
     864:	80 93 e3 01 	sts	0x01E3, r24	; 0x8001e3 <Xg+0x2>
     868:	90 93 e4 01 	sts	0x01E4, r25	; 0x8001e4 <Xg+0x3>
			Yg = Yg - GyroErrorY;
     86c:	20 91 d1 01 	lds	r18, 0x01D1	; 0x8001d1 <GyroErrorY>
     870:	30 91 d2 01 	lds	r19, 0x01D2	; 0x8001d2 <GyroErrorY+0x1>
     874:	40 91 d3 01 	lds	r20, 0x01D3	; 0x8001d3 <GyroErrorY+0x2>
     878:	50 91 d4 01 	lds	r21, 0x01D4	; 0x8001d4 <GyroErrorY+0x3>
     87c:	60 91 dd 01 	lds	r22, 0x01DD	; 0x8001dd <Yg>
     880:	70 91 de 01 	lds	r23, 0x01DE	; 0x8001de <Yg+0x1>
     884:	80 91 df 01 	lds	r24, 0x01DF	; 0x8001df <Yg+0x2>
     888:	90 91 e0 01 	lds	r25, 0x01E0	; 0x8001e0 <Yg+0x3>
     88c:	0e 94 57 05 	call	0xaae	; 0xaae <__subsf3>
     890:	60 93 dd 01 	sts	0x01DD, r22	; 0x8001dd <Yg>
     894:	70 93 de 01 	sts	0x01DE, r23	; 0x8001de <Yg+0x1>
     898:	80 93 df 01 	sts	0x01DF, r24	; 0x8001df <Yg+0x2>
     89c:	90 93 e0 01 	sts	0x01E0, r25	; 0x8001e0 <Yg+0x3>
			Zg = Zg - GyroErrorZ;
     8a0:	20 91 cd 01 	lds	r18, 0x01CD	; 0x8001cd <GyroErrorZ>
     8a4:	30 91 ce 01 	lds	r19, 0x01CE	; 0x8001ce <GyroErrorZ+0x1>
     8a8:	40 91 cf 01 	lds	r20, 0x01CF	; 0x8001cf <GyroErrorZ+0x2>
     8ac:	50 91 d0 01 	lds	r21, 0x01D0	; 0x8001d0 <GyroErrorZ+0x3>
     8b0:	60 91 d9 01 	lds	r22, 0x01D9	; 0x8001d9 <Zg>
     8b4:	70 91 da 01 	lds	r23, 0x01DA	; 0x8001da <Zg+0x1>
     8b8:	80 91 db 01 	lds	r24, 0x01DB	; 0x8001db <Zg+0x2>
     8bc:	90 91 dc 01 	lds	r25, 0x01DC	; 0x8001dc <Zg+0x3>
     8c0:	0e 94 57 05 	call	0xaae	; 0xaae <__subsf3>
     8c4:	4b 01       	movw	r8, r22
     8c6:	5c 01       	movw	r10, r24
     8c8:	60 93 d9 01 	sts	0x01D9, r22	; 0x8001d9 <Zg>
     8cc:	70 93 da 01 	sts	0x01DA, r23	; 0x8001da <Zg+0x1>
     8d0:	80 93 db 01 	sts	0x01DB, r24	; 0x8001db <Zg+0x2>
     8d4:	90 93 dc 01 	sts	0x01DC, r25	; 0x8001dc <Zg+0x3>
			// Currently the raw values are in degrees per seconds, deg/s, so we need to multiply by seconds (s) to get the angle in degrees
			gyroAngleZ = gyroAngleZ + Zg * millis * 0.001;
     8d8:	6c 2f       	mov	r22, r28
     8da:	70 e0       	ldi	r23, 0x00	; 0
     8dc:	80 e0       	ldi	r24, 0x00	; 0
     8de:	90 e0       	ldi	r25, 0x00	; 0
     8e0:	0e 94 aa 06 	call	0xd54	; 0xd54 <__floatsisf>
     8e4:	9b 01       	movw	r18, r22
     8e6:	ac 01       	movw	r20, r24
     8e8:	c5 01       	movw	r24, r10
     8ea:	b4 01       	movw	r22, r8
     8ec:	0e 94 65 07 	call	0xeca	; 0xeca <__mulsf3>
     8f0:	2f e6       	ldi	r18, 0x6F	; 111
     8f2:	32 e1       	ldi	r19, 0x12	; 18
     8f4:	43 e8       	ldi	r20, 0x83	; 131
     8f6:	5a e3       	ldi	r21, 0x3A	; 58
     8f8:	0e 94 65 07 	call	0xeca	; 0xeca <__mulsf3>
     8fc:	20 91 c5 01 	lds	r18, 0x01C5	; 0x8001c5 <gyroAngleZ>
     900:	30 91 c6 01 	lds	r19, 0x01C6	; 0x8001c6 <gyroAngleZ+0x1>
     904:	40 91 c7 01 	lds	r20, 0x01C7	; 0x8001c7 <gyroAngleZ+0x2>
     908:	50 91 c8 01 	lds	r21, 0x01C8	; 0x8001c8 <gyroAngleZ+0x3>
     90c:	0e 94 58 05 	call	0xab0	; 0xab0 <__addsf3>
     910:	60 93 c5 01 	sts	0x01C5, r22	; 0x8001c5 <gyroAngleZ>
     914:	70 93 c6 01 	sts	0x01C6, r23	; 0x8001c6 <gyroAngleZ+0x1>
     918:	80 93 c7 01 	sts	0x01C7, r24	; 0x8001c7 <gyroAngleZ+0x2>
     91c:	90 93 c8 01 	sts	0x01C8, r25	; 0x8001c8 <gyroAngleZ+0x3>
			// Complementary filter - combine accelerometer and gyro angle values
			yaw =  0.98 * gyroAngleZ + 0.02 * accAngle;
     920:	28 e4       	ldi	r18, 0x48	; 72
     922:	31 ee       	ldi	r19, 0xE1	; 225
     924:	4a e7       	ldi	r20, 0x7A	; 122
     926:	5f e3       	ldi	r21, 0x3F	; 63
     928:	0e 94 65 07 	call	0xeca	; 0xeca <__mulsf3>
     92c:	4b 01       	movw	r8, r22
     92e:	5c 01       	movw	r10, r24
     930:	2a e0       	ldi	r18, 0x0A	; 10
     932:	37 ed       	ldi	r19, 0xD7	; 215
     934:	43 ea       	ldi	r20, 0xA3	; 163
     936:	5c e3       	ldi	r21, 0x3C	; 60
     938:	c7 01       	movw	r24, r14
     93a:	b6 01       	movw	r22, r12
     93c:	0e 94 65 07 	call	0xeca	; 0xeca <__mulsf3>
     940:	9b 01       	movw	r18, r22
     942:	ac 01       	movw	r20, r24
     944:	c5 01       	movw	r24, r10
     946:	b4 01       	movw	r22, r8
     948:	0e 94 58 05 	call	0xab0	; 0xab0 <__addsf3>
     94c:	60 93 c1 01 	sts	0x01C1, r22	; 0x8001c1 <yaw>
     950:	70 93 c2 01 	sts	0x01C2, r23	; 0x8001c2 <yaw+0x1>
     954:	80 93 c3 01 	sts	0x01C3, r24	; 0x8001c3 <yaw+0x2>
     958:	90 93 c4 01 	sts	0x01C4, r25	; 0x8001c4 <yaw+0x3>
			
			//PrintAngles();
			PrintRawValues();		
     95c:	0e 94 ee 02 	call	0x5dc	; 0x5dc <PrintRawValues>
			
			//imu_filter(Xa, Ya, Za, Xg, Yg, Zg);
			//eulerAngles(q_est, &roll, &pitch, &yaw);
			//PrintRollPitchYaw();

			millis = 0;
     960:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <__data_end>
     964:	41 cf       	rjmp	.-382    	; 0x7e8 <main+0x28>

00000966 <I2cStart>:
﻿#include <I2C.h>

void I2cStart(void) //СТАРТ состояние
{
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
     966:	84 ea       	ldi	r24, 0xA4	; 164
     968:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while(!(TWCR & (1<<TWINT)));
     96c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     970:	88 23       	and	r24, r24
     972:	e4 f7       	brge	.-8      	; 0x96c <I2cStart+0x6>
}
     974:	08 95       	ret

00000976 <I2cStop>:

void I2cStop(void) //СТОП состояние
{
	TWCR = (1<<TWINT) | (1<<TWSTO) | (1<<TWEN);
     976:	84 e9       	ldi	r24, 0x94	; 148
     978:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     97c:	08 95       	ret

0000097e <I2cSendByte>:
}

void I2cSendByte(uint8_t data) //посылка байта с МК
{
	TWDR = data;
     97e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	TWCR = (1<<TWINT) | (1<<TWEN);
     982:	84 e8       	ldi	r24, 0x84	; 132
     984:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while(!(TWCR & (1<<TWINT)));
     988:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     98c:	88 23       	and	r24, r24
     98e:	e4 f7       	brge	.-8      	; 0x988 <I2cSendByte+0xa>
}
     990:	08 95       	ret

00000992 <I2cGetByte>:

uint8_t I2cGetByte(uint8_t is_last_byte) //приём байта МК-ом
{
	if(is_last_byte)
     992:	88 23       	and	r24, r24
     994:	21 f0       	breq	.+8      	; 0x99e <I2cGetByte+0xc>
	TWCR = (1<<TWINT) | (1<<TWEN);// NACK
     996:	84 e8       	ldi	r24, 0x84	; 132
     998:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     99c:	03 c0       	rjmp	.+6      	; 0x9a4 <I2cGetByte+0x12>
	else
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);// ACK
     99e:	84 ec       	ldi	r24, 0xC4	; 196
     9a0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	while(!(TWCR & (1<<TWINT)));
     9a4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     9a8:	88 23       	and	r24, r24
     9aa:	e4 f7       	brge	.-8      	; 0x9a4 <I2cGetByte+0x12>
	return(TWDR);
     9ac:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
     9b0:	08 95       	ret

000009b2 <TransmitDataToGy86>:
﻿#include "mpu6050.h"

void TransmitDataToGy86(uint8_t reg_addr, uint8_t data)
{
     9b2:	cf 93       	push	r28
     9b4:	df 93       	push	r29
     9b6:	d8 2f       	mov	r29, r24
     9b8:	c6 2f       	mov	r28, r22
	I2cStart();
     9ba:	0e 94 b3 04 	call	0x966	; 0x966 <I2cStart>
	I2cSendByte((SENS_ADDR<<1) | WRITE);
     9be:	80 ed       	ldi	r24, 0xD0	; 208
     9c0:	0e 94 bf 04 	call	0x97e	; 0x97e <I2cSendByte>
	I2cSendByte(reg_addr);
     9c4:	8d 2f       	mov	r24, r29
     9c6:	0e 94 bf 04 	call	0x97e	; 0x97e <I2cSendByte>
	I2cSendByte(data);
     9ca:	8c 2f       	mov	r24, r28
     9cc:	0e 94 bf 04 	call	0x97e	; 0x97e <I2cSendByte>
	I2cStop();
     9d0:	0e 94 bb 04 	call	0x976	; 0x976 <I2cStop>
}
     9d4:	df 91       	pop	r29
     9d6:	cf 91       	pop	r28
     9d8:	08 95       	ret

000009da <RecieveDataFromGy86>:

//функция приёма байта по протоколу i2c
uint8_t RecieveDataFromGy86(uint8_t reg_addr)
{
     9da:	cf 93       	push	r28
     9dc:	c8 2f       	mov	r28, r24
	uint8_t res;
	I2cStart();
     9de:	0e 94 b3 04 	call	0x966	; 0x966 <I2cStart>
	I2cSendByte((SENS_ADDR<<1) | WRITE);
     9e2:	80 ed       	ldi	r24, 0xD0	; 208
     9e4:	0e 94 bf 04 	call	0x97e	; 0x97e <I2cSendByte>
	I2cSendByte(reg_addr);
     9e8:	8c 2f       	mov	r24, r28
     9ea:	0e 94 bf 04 	call	0x97e	; 0x97e <I2cSendByte>
	I2cStart();
     9ee:	0e 94 b3 04 	call	0x966	; 0x966 <I2cStart>
	I2cSendByte((SENS_ADDR<<1) | READ);
     9f2:	81 ed       	ldi	r24, 0xD1	; 209
     9f4:	0e 94 bf 04 	call	0x97e	; 0x97e <I2cSendByte>
	res = I2cGetByte(LAST_BYTE);
     9f8:	81 e0       	ldi	r24, 0x01	; 1
     9fa:	0e 94 c9 04 	call	0x992	; 0x992 <I2cGetByte>
     9fe:	c8 2f       	mov	r28, r24
	I2cStop();
     a00:	0e 94 bb 04 	call	0x976	; 0x976 <I2cStop>
	return res;
}
     a04:	8c 2f       	mov	r24, r28
     a06:	cf 91       	pop	r28
     a08:	08 95       	ret

00000a0a <Gy86Init>:
 
void Gy86Init(void)
{
	TWBR = 0x48; //TWBR = (F_CPU/2*SCLfreq)-8=72, SCLfreq=100KHz
     a0a:	88 e4       	ldi	r24, 0x48	; 72
     a0c:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
     a10:	08 95       	ret

00000a12 <GyroInit>:
     a12:	2f ef       	ldi	r18, 0xFF	; 255
     a14:	82 e5       	ldi	r24, 0x52	; 82
     a16:	97 e0       	ldi	r25, 0x07	; 7
     a18:	21 50       	subi	r18, 0x01	; 1
     a1a:	80 40       	sbci	r24, 0x00	; 0
     a1c:	90 40       	sbci	r25, 0x00	; 0
     a1e:	e1 f7       	brne	.-8      	; 0xa18 <GyroInit+0x6>
     a20:	00 c0       	rjmp	.+0      	; 0xa22 <GyroInit+0x10>
     a22:	00 00       	nop
}
 
void GyroInit(void)
{
	_delay_ms(150);
	TransmitDataToGy86(SMPLRT_DIV, 0x07);//делитель частоты дискретизации = 8 /* 1KHz sample rate */
     a24:	67 e0       	ldi	r22, 0x07	; 7
     a26:	89 e1       	ldi	r24, 0x19	; 25
     a28:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <TransmitDataToGy86>
	TransmitDataToGy86(CONFIG, 0x00);// Fs = 8KHz
     a2c:	60 e0       	ldi	r22, 0x00	; 0
     a2e:	8a e1       	ldi	r24, 0x1A	; 26
     a30:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <TransmitDataToGy86>
	TransmitDataToGy86(GYRO_CONFIG, 0x18);// Full scale range +/- 2000 degree/C
     a34:	68 e1       	ldi	r22, 0x18	; 24
     a36:	8b e1       	ldi	r24, 0x1B	; 27
     a38:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <TransmitDataToGy86>
	TransmitDataToGy86(ACCEL_CONFIG, 0x00);// Full scale range +/- 2g
     a3c:	60 e0       	ldi	r22, 0x00	; 0
     a3e:	8c e1       	ldi	r24, 0x1C	; 28
     a40:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <TransmitDataToGy86>
	TransmitDataToGy86(PWR_MGMT_1, 0x01); //configured one of the gyroscopes as the clock reference for improved stability
     a44:	61 e0       	ldi	r22, 0x01	; 1
     a46:	8b e6       	ldi	r24, 0x6B	; 107
     a48:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <TransmitDataToGy86>
     a4c:	08 95       	ret

00000a4e <UartSendChar>:
}

void UartSendChar(uint8_t byte)
{
	// ожидаем выставления бита UDRE0, а затем кладем посылку в UDR0
	while(!(UCSR0A & (1<<UDRE0)));
     a4e:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     a52:	95 ff       	sbrs	r25, 5
     a54:	fc cf       	rjmp	.-8      	; 0xa4e <UartSendChar>
	UDR0 = byte;
     a56:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     a5a:	08 95       	ret

00000a5c <UartSendString>:
}

void UartSendString(char* index)
{
     a5c:	cf 93       	push	r28
     a5e:	df 93       	push	r29
     a60:	ec 01       	movw	r28, r24
	while(*index) UartSendChar(*index++);
     a62:	03 c0       	rjmp	.+6      	; 0xa6a <UartSendString+0xe>
     a64:	21 96       	adiw	r28, 0x01	; 1
     a66:	0e 94 27 05 	call	0xa4e	; 0xa4e <UartSendChar>
     a6a:	88 81       	ld	r24, Y
     a6c:	81 11       	cpse	r24, r1
     a6e:	fa cf       	rjmp	.-12     	; 0xa64 <UartSendString+0x8>
}
     a70:	df 91       	pop	r29
     a72:	cf 91       	pop	r28
     a74:	08 95       	ret

00000a76 <UartInit>:
﻿#include "UART.h"

void UartInit(void)
{
	//инициализируем UART на передачу данных, 8 бит данных, 1 стоп, без проверки четности
	UCSR0B = (1 << TXEN0);
     a76:	88 e0       	ldi	r24, 0x08	; 8
     a78:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	UCSR0C = (1 << UCSZ01) | (1 << UCSZ00);
     a7c:	86 e0       	ldi	r24, 0x06	; 6
     a7e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
	UBRR0H = 0x00;
     a82:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = 0x67; //16000000/(16*9600)-1 = 103 = 0x67
     a86:	87 e6       	ldi	r24, 0x67	; 103
     a88:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     a8c:	2f ef       	ldi	r18, 0xFF	; 255
     a8e:	89 e6       	ldi	r24, 0x69	; 105
     a90:	98 e1       	ldi	r25, 0x18	; 24
     a92:	21 50       	subi	r18, 0x01	; 1
     a94:	80 40       	sbci	r24, 0x00	; 0
     a96:	90 40       	sbci	r25, 0x00	; 0
     a98:	e1 f7       	brne	.-8      	; 0xa92 <UartInit+0x1c>
     a9a:	00 c0       	rjmp	.+0      	; 0xa9c <UartInit+0x26>
     a9c:	00 00       	nop
	_delay_ms(500);
	UartSendString("UART OK");
     a9e:	87 eb       	ldi	r24, 0xB7	; 183
     aa0:	91 e0       	ldi	r25, 0x01	; 1
     aa2:	0e 94 2e 05 	call	0xa5c	; 0xa5c <UartSendString>
	UartSendChar('\n');
     aa6:	8a e0       	ldi	r24, 0x0A	; 10
     aa8:	0e 94 27 05 	call	0xa4e	; 0xa4e <UartSendChar>
     aac:	08 95       	ret

00000aae <__subsf3>:
     aae:	50 58       	subi	r21, 0x80	; 128

00000ab0 <__addsf3>:
     ab0:	bb 27       	eor	r27, r27
     ab2:	aa 27       	eor	r26, r26
     ab4:	0e 94 6f 05 	call	0xade	; 0xade <__addsf3x>
     ab8:	0c 94 23 07 	jmp	0xe46	; 0xe46 <__fp_round>
     abc:	0e 94 15 07 	call	0xe2a	; 0xe2a <__fp_pscA>
     ac0:	38 f0       	brcs	.+14     	; 0xad0 <__addsf3+0x20>
     ac2:	0e 94 1c 07 	call	0xe38	; 0xe38 <__fp_pscB>
     ac6:	20 f0       	brcs	.+8      	; 0xad0 <__addsf3+0x20>
     ac8:	39 f4       	brne	.+14     	; 0xad8 <__addsf3+0x28>
     aca:	9f 3f       	cpi	r25, 0xFF	; 255
     acc:	19 f4       	brne	.+6      	; 0xad4 <__addsf3+0x24>
     ace:	26 f4       	brtc	.+8      	; 0xad8 <__addsf3+0x28>
     ad0:	0c 94 eb 06 	jmp	0xdd6	; 0xdd6 <__fp_nan>
     ad4:	0e f4       	brtc	.+2      	; 0xad8 <__addsf3+0x28>
     ad6:	e0 95       	com	r30
     ad8:	e7 fb       	bst	r30, 7
     ada:	0c 94 e5 06 	jmp	0xdca	; 0xdca <__fp_inf>

00000ade <__addsf3x>:
     ade:	e9 2f       	mov	r30, r25
     ae0:	0e 94 34 07 	call	0xe68	; 0xe68 <__fp_split3>
     ae4:	58 f3       	brcs	.-42     	; 0xabc <__addsf3+0xc>
     ae6:	ba 17       	cp	r27, r26
     ae8:	62 07       	cpc	r22, r18
     aea:	73 07       	cpc	r23, r19
     aec:	84 07       	cpc	r24, r20
     aee:	95 07       	cpc	r25, r21
     af0:	20 f0       	brcs	.+8      	; 0xafa <__addsf3x+0x1c>
     af2:	79 f4       	brne	.+30     	; 0xb12 <__addsf3x+0x34>
     af4:	a6 f5       	brtc	.+104    	; 0xb5e <__addsf3x+0x80>
     af6:	0c 94 56 07 	jmp	0xeac	; 0xeac <__fp_zero>
     afa:	0e f4       	brtc	.+2      	; 0xafe <__addsf3x+0x20>
     afc:	e0 95       	com	r30
     afe:	0b 2e       	mov	r0, r27
     b00:	ba 2f       	mov	r27, r26
     b02:	a0 2d       	mov	r26, r0
     b04:	0b 01       	movw	r0, r22
     b06:	b9 01       	movw	r22, r18
     b08:	90 01       	movw	r18, r0
     b0a:	0c 01       	movw	r0, r24
     b0c:	ca 01       	movw	r24, r20
     b0e:	a0 01       	movw	r20, r0
     b10:	11 24       	eor	r1, r1
     b12:	ff 27       	eor	r31, r31
     b14:	59 1b       	sub	r21, r25
     b16:	99 f0       	breq	.+38     	; 0xb3e <__addsf3x+0x60>
     b18:	59 3f       	cpi	r21, 0xF9	; 249
     b1a:	50 f4       	brcc	.+20     	; 0xb30 <__addsf3x+0x52>
     b1c:	50 3e       	cpi	r21, 0xE0	; 224
     b1e:	68 f1       	brcs	.+90     	; 0xb7a <__addsf3x+0x9c>
     b20:	1a 16       	cp	r1, r26
     b22:	f0 40       	sbci	r31, 0x00	; 0
     b24:	a2 2f       	mov	r26, r18
     b26:	23 2f       	mov	r18, r19
     b28:	34 2f       	mov	r19, r20
     b2a:	44 27       	eor	r20, r20
     b2c:	58 5f       	subi	r21, 0xF8	; 248
     b2e:	f3 cf       	rjmp	.-26     	; 0xb16 <__addsf3x+0x38>
     b30:	46 95       	lsr	r20
     b32:	37 95       	ror	r19
     b34:	27 95       	ror	r18
     b36:	a7 95       	ror	r26
     b38:	f0 40       	sbci	r31, 0x00	; 0
     b3a:	53 95       	inc	r21
     b3c:	c9 f7       	brne	.-14     	; 0xb30 <__addsf3x+0x52>
     b3e:	7e f4       	brtc	.+30     	; 0xb5e <__addsf3x+0x80>
     b40:	1f 16       	cp	r1, r31
     b42:	ba 0b       	sbc	r27, r26
     b44:	62 0b       	sbc	r22, r18
     b46:	73 0b       	sbc	r23, r19
     b48:	84 0b       	sbc	r24, r20
     b4a:	ba f0       	brmi	.+46     	; 0xb7a <__addsf3x+0x9c>
     b4c:	91 50       	subi	r25, 0x01	; 1
     b4e:	a1 f0       	breq	.+40     	; 0xb78 <__addsf3x+0x9a>
     b50:	ff 0f       	add	r31, r31
     b52:	bb 1f       	adc	r27, r27
     b54:	66 1f       	adc	r22, r22
     b56:	77 1f       	adc	r23, r23
     b58:	88 1f       	adc	r24, r24
     b5a:	c2 f7       	brpl	.-16     	; 0xb4c <__addsf3x+0x6e>
     b5c:	0e c0       	rjmp	.+28     	; 0xb7a <__addsf3x+0x9c>
     b5e:	ba 0f       	add	r27, r26
     b60:	62 1f       	adc	r22, r18
     b62:	73 1f       	adc	r23, r19
     b64:	84 1f       	adc	r24, r20
     b66:	48 f4       	brcc	.+18     	; 0xb7a <__addsf3x+0x9c>
     b68:	87 95       	ror	r24
     b6a:	77 95       	ror	r23
     b6c:	67 95       	ror	r22
     b6e:	b7 95       	ror	r27
     b70:	f7 95       	ror	r31
     b72:	9e 3f       	cpi	r25, 0xFE	; 254
     b74:	08 f0       	brcs	.+2      	; 0xb78 <__addsf3x+0x9a>
     b76:	b0 cf       	rjmp	.-160    	; 0xad8 <__addsf3+0x28>
     b78:	93 95       	inc	r25
     b7a:	88 0f       	add	r24, r24
     b7c:	08 f0       	brcs	.+2      	; 0xb80 <__addsf3x+0xa2>
     b7e:	99 27       	eor	r25, r25
     b80:	ee 0f       	add	r30, r30
     b82:	97 95       	ror	r25
     b84:	87 95       	ror	r24
     b86:	08 95       	ret
     b88:	0e 94 15 07 	call	0xe2a	; 0xe2a <__fp_pscA>
     b8c:	60 f0       	brcs	.+24     	; 0xba6 <__addsf3x+0xc8>
     b8e:	80 e8       	ldi	r24, 0x80	; 128
     b90:	91 e0       	ldi	r25, 0x01	; 1
     b92:	09 f4       	brne	.+2      	; 0xb96 <__addsf3x+0xb8>
     b94:	9e ef       	ldi	r25, 0xFE	; 254
     b96:	0e 94 1c 07 	call	0xe38	; 0xe38 <__fp_pscB>
     b9a:	28 f0       	brcs	.+10     	; 0xba6 <__addsf3x+0xc8>
     b9c:	40 e8       	ldi	r20, 0x80	; 128
     b9e:	51 e0       	ldi	r21, 0x01	; 1
     ba0:	71 f4       	brne	.+28     	; 0xbbe <atan2+0x10>
     ba2:	5e ef       	ldi	r21, 0xFE	; 254
     ba4:	0c c0       	rjmp	.+24     	; 0xbbe <atan2+0x10>
     ba6:	0c 94 eb 06 	jmp	0xdd6	; 0xdd6 <__fp_nan>
     baa:	0c 94 56 07 	jmp	0xeac	; 0xeac <__fp_zero>

00000bae <atan2>:
     bae:	e9 2f       	mov	r30, r25
     bb0:	e0 78       	andi	r30, 0x80	; 128
     bb2:	0e 94 34 07 	call	0xe68	; 0xe68 <__fp_split3>
     bb6:	40 f3       	brcs	.-48     	; 0xb88 <__addsf3x+0xaa>
     bb8:	09 2e       	mov	r0, r25
     bba:	05 2a       	or	r0, r21
     bbc:	b1 f3       	breq	.-20     	; 0xbaa <__addsf3x+0xcc>
     bbe:	26 17       	cp	r18, r22
     bc0:	37 07       	cpc	r19, r23
     bc2:	48 07       	cpc	r20, r24
     bc4:	59 07       	cpc	r21, r25
     bc6:	38 f0       	brcs	.+14     	; 0xbd6 <atan2+0x28>
     bc8:	0e 2e       	mov	r0, r30
     bca:	07 f8       	bld	r0, 7
     bcc:	e0 25       	eor	r30, r0
     bce:	69 f0       	breq	.+26     	; 0xbea <atan2+0x3c>
     bd0:	e0 25       	eor	r30, r0
     bd2:	e0 64       	ori	r30, 0x40	; 64
     bd4:	0a c0       	rjmp	.+20     	; 0xbea <atan2+0x3c>
     bd6:	ef 63       	ori	r30, 0x3F	; 63
     bd8:	07 f8       	bld	r0, 7
     bda:	00 94       	com	r0
     bdc:	07 fa       	bst	r0, 7
     bde:	db 01       	movw	r26, r22
     be0:	b9 01       	movw	r22, r18
     be2:	9d 01       	movw	r18, r26
     be4:	dc 01       	movw	r26, r24
     be6:	ca 01       	movw	r24, r20
     be8:	ad 01       	movw	r20, r26
     bea:	ef 93       	push	r30
     bec:	0e 94 4d 06 	call	0xc9a	; 0xc9a <__divsf3_pse>
     bf0:	0e 94 23 07 	call	0xe46	; 0xe46 <__fp_round>
     bf4:	0e 94 07 06 	call	0xc0e	; 0xc0e <atan>
     bf8:	5f 91       	pop	r21
     bfa:	55 23       	and	r21, r21
     bfc:	39 f0       	breq	.+14     	; 0xc0c <atan2+0x5e>
     bfe:	2b ed       	ldi	r18, 0xDB	; 219
     c00:	3f e0       	ldi	r19, 0x0F	; 15
     c02:	49 e4       	ldi	r20, 0x49	; 73
     c04:	50 fd       	sbrc	r21, 0
     c06:	49 ec       	ldi	r20, 0xC9	; 201
     c08:	0c 94 58 05 	jmp	0xab0	; 0xab0 <__addsf3>
     c0c:	08 95       	ret

00000c0e <atan>:
     c0e:	df 93       	push	r29
     c10:	dd 27       	eor	r29, r29
     c12:	b9 2f       	mov	r27, r25
     c14:	bf 77       	andi	r27, 0x7F	; 127
     c16:	40 e8       	ldi	r20, 0x80	; 128
     c18:	5f e3       	ldi	r21, 0x3F	; 63
     c1a:	16 16       	cp	r1, r22
     c1c:	17 06       	cpc	r1, r23
     c1e:	48 07       	cpc	r20, r24
     c20:	5b 07       	cpc	r21, r27
     c22:	18 f4       	brcc	.+6      	; 0xc2a <atan+0x1c>
     c24:	d9 2f       	mov	r29, r25
     c26:	0e 94 5d 07 	call	0xeba	; 0xeba <inverse>
     c2a:	9f 93       	push	r25
     c2c:	8f 93       	push	r24
     c2e:	7f 93       	push	r23
     c30:	6f 93       	push	r22
     c32:	0e 94 d2 07 	call	0xfa4	; 0xfa4 <square>
     c36:	e8 e6       	ldi	r30, 0x68	; 104
     c38:	f0 e0       	ldi	r31, 0x00	; 0
     c3a:	0e 94 ee 06 	call	0xddc	; 0xddc <__fp_powser>
     c3e:	0e 94 23 07 	call	0xe46	; 0xe46 <__fp_round>
     c42:	2f 91       	pop	r18
     c44:	3f 91       	pop	r19
     c46:	4f 91       	pop	r20
     c48:	5f 91       	pop	r21
     c4a:	0e 94 78 07 	call	0xef0	; 0xef0 <__mulsf3x>
     c4e:	dd 23       	and	r29, r29
     c50:	51 f0       	breq	.+20     	; 0xc66 <atan+0x58>
     c52:	90 58       	subi	r25, 0x80	; 128
     c54:	a2 ea       	ldi	r26, 0xA2	; 162
     c56:	2a ed       	ldi	r18, 0xDA	; 218
     c58:	3f e0       	ldi	r19, 0x0F	; 15
     c5a:	49 ec       	ldi	r20, 0xC9	; 201
     c5c:	5f e3       	ldi	r21, 0x3F	; 63
     c5e:	d0 78       	andi	r29, 0x80	; 128
     c60:	5d 27       	eor	r21, r29
     c62:	0e 94 6f 05 	call	0xade	; 0xade <__addsf3x>
     c66:	df 91       	pop	r29
     c68:	0c 94 23 07 	jmp	0xe46	; 0xe46 <__fp_round>

00000c6c <__divsf3>:
     c6c:	0e 94 4a 06 	call	0xc94	; 0xc94 <__divsf3x>
     c70:	0c 94 23 07 	jmp	0xe46	; 0xe46 <__fp_round>
     c74:	0e 94 1c 07 	call	0xe38	; 0xe38 <__fp_pscB>
     c78:	58 f0       	brcs	.+22     	; 0xc90 <__divsf3+0x24>
     c7a:	0e 94 15 07 	call	0xe2a	; 0xe2a <__fp_pscA>
     c7e:	40 f0       	brcs	.+16     	; 0xc90 <__divsf3+0x24>
     c80:	29 f4       	brne	.+10     	; 0xc8c <__divsf3+0x20>
     c82:	5f 3f       	cpi	r21, 0xFF	; 255
     c84:	29 f0       	breq	.+10     	; 0xc90 <__divsf3+0x24>
     c86:	0c 94 e5 06 	jmp	0xdca	; 0xdca <__fp_inf>
     c8a:	51 11       	cpse	r21, r1
     c8c:	0c 94 57 07 	jmp	0xeae	; 0xeae <__fp_szero>
     c90:	0c 94 eb 06 	jmp	0xdd6	; 0xdd6 <__fp_nan>

00000c94 <__divsf3x>:
     c94:	0e 94 34 07 	call	0xe68	; 0xe68 <__fp_split3>
     c98:	68 f3       	brcs	.-38     	; 0xc74 <__divsf3+0x8>

00000c9a <__divsf3_pse>:
     c9a:	99 23       	and	r25, r25
     c9c:	b1 f3       	breq	.-20     	; 0xc8a <__divsf3+0x1e>
     c9e:	55 23       	and	r21, r21
     ca0:	91 f3       	breq	.-28     	; 0xc86 <__divsf3+0x1a>
     ca2:	95 1b       	sub	r25, r21
     ca4:	55 0b       	sbc	r21, r21
     ca6:	bb 27       	eor	r27, r27
     ca8:	aa 27       	eor	r26, r26
     caa:	62 17       	cp	r22, r18
     cac:	73 07       	cpc	r23, r19
     cae:	84 07       	cpc	r24, r20
     cb0:	38 f0       	brcs	.+14     	; 0xcc0 <__divsf3_pse+0x26>
     cb2:	9f 5f       	subi	r25, 0xFF	; 255
     cb4:	5f 4f       	sbci	r21, 0xFF	; 255
     cb6:	22 0f       	add	r18, r18
     cb8:	33 1f       	adc	r19, r19
     cba:	44 1f       	adc	r20, r20
     cbc:	aa 1f       	adc	r26, r26
     cbe:	a9 f3       	breq	.-22     	; 0xcaa <__divsf3_pse+0x10>
     cc0:	35 d0       	rcall	.+106    	; 0xd2c <__divsf3_pse+0x92>
     cc2:	0e 2e       	mov	r0, r30
     cc4:	3a f0       	brmi	.+14     	; 0xcd4 <__divsf3_pse+0x3a>
     cc6:	e0 e8       	ldi	r30, 0x80	; 128
     cc8:	32 d0       	rcall	.+100    	; 0xd2e <__divsf3_pse+0x94>
     cca:	91 50       	subi	r25, 0x01	; 1
     ccc:	50 40       	sbci	r21, 0x00	; 0
     cce:	e6 95       	lsr	r30
     cd0:	00 1c       	adc	r0, r0
     cd2:	ca f7       	brpl	.-14     	; 0xcc6 <__divsf3_pse+0x2c>
     cd4:	2b d0       	rcall	.+86     	; 0xd2c <__divsf3_pse+0x92>
     cd6:	fe 2f       	mov	r31, r30
     cd8:	29 d0       	rcall	.+82     	; 0xd2c <__divsf3_pse+0x92>
     cda:	66 0f       	add	r22, r22
     cdc:	77 1f       	adc	r23, r23
     cde:	88 1f       	adc	r24, r24
     ce0:	bb 1f       	adc	r27, r27
     ce2:	26 17       	cp	r18, r22
     ce4:	37 07       	cpc	r19, r23
     ce6:	48 07       	cpc	r20, r24
     ce8:	ab 07       	cpc	r26, r27
     cea:	b0 e8       	ldi	r27, 0x80	; 128
     cec:	09 f0       	breq	.+2      	; 0xcf0 <__divsf3_pse+0x56>
     cee:	bb 0b       	sbc	r27, r27
     cf0:	80 2d       	mov	r24, r0
     cf2:	bf 01       	movw	r22, r30
     cf4:	ff 27       	eor	r31, r31
     cf6:	93 58       	subi	r25, 0x83	; 131
     cf8:	5f 4f       	sbci	r21, 0xFF	; 255
     cfa:	3a f0       	brmi	.+14     	; 0xd0a <__divsf3_pse+0x70>
     cfc:	9e 3f       	cpi	r25, 0xFE	; 254
     cfe:	51 05       	cpc	r21, r1
     d00:	78 f0       	brcs	.+30     	; 0xd20 <__divsf3_pse+0x86>
     d02:	0c 94 e5 06 	jmp	0xdca	; 0xdca <__fp_inf>
     d06:	0c 94 57 07 	jmp	0xeae	; 0xeae <__fp_szero>
     d0a:	5f 3f       	cpi	r21, 0xFF	; 255
     d0c:	e4 f3       	brlt	.-8      	; 0xd06 <__divsf3_pse+0x6c>
     d0e:	98 3e       	cpi	r25, 0xE8	; 232
     d10:	d4 f3       	brlt	.-12     	; 0xd06 <__divsf3_pse+0x6c>
     d12:	86 95       	lsr	r24
     d14:	77 95       	ror	r23
     d16:	67 95       	ror	r22
     d18:	b7 95       	ror	r27
     d1a:	f7 95       	ror	r31
     d1c:	9f 5f       	subi	r25, 0xFF	; 255
     d1e:	c9 f7       	brne	.-14     	; 0xd12 <__divsf3_pse+0x78>
     d20:	88 0f       	add	r24, r24
     d22:	91 1d       	adc	r25, r1
     d24:	96 95       	lsr	r25
     d26:	87 95       	ror	r24
     d28:	97 f9       	bld	r25, 7
     d2a:	08 95       	ret
     d2c:	e1 e0       	ldi	r30, 0x01	; 1
     d2e:	66 0f       	add	r22, r22
     d30:	77 1f       	adc	r23, r23
     d32:	88 1f       	adc	r24, r24
     d34:	bb 1f       	adc	r27, r27
     d36:	62 17       	cp	r22, r18
     d38:	73 07       	cpc	r23, r19
     d3a:	84 07       	cpc	r24, r20
     d3c:	ba 07       	cpc	r27, r26
     d3e:	20 f0       	brcs	.+8      	; 0xd48 <__divsf3_pse+0xae>
     d40:	62 1b       	sub	r22, r18
     d42:	73 0b       	sbc	r23, r19
     d44:	84 0b       	sbc	r24, r20
     d46:	ba 0b       	sbc	r27, r26
     d48:	ee 1f       	adc	r30, r30
     d4a:	88 f7       	brcc	.-30     	; 0xd2e <__divsf3_pse+0x94>
     d4c:	e0 95       	com	r30
     d4e:	08 95       	ret

00000d50 <__floatunsisf>:
     d50:	e8 94       	clt
     d52:	09 c0       	rjmp	.+18     	; 0xd66 <__floatsisf+0x12>

00000d54 <__floatsisf>:
     d54:	97 fb       	bst	r25, 7
     d56:	3e f4       	brtc	.+14     	; 0xd66 <__floatsisf+0x12>
     d58:	90 95       	com	r25
     d5a:	80 95       	com	r24
     d5c:	70 95       	com	r23
     d5e:	61 95       	neg	r22
     d60:	7f 4f       	sbci	r23, 0xFF	; 255
     d62:	8f 4f       	sbci	r24, 0xFF	; 255
     d64:	9f 4f       	sbci	r25, 0xFF	; 255
     d66:	99 23       	and	r25, r25
     d68:	a9 f0       	breq	.+42     	; 0xd94 <__floatsisf+0x40>
     d6a:	f9 2f       	mov	r31, r25
     d6c:	96 e9       	ldi	r25, 0x96	; 150
     d6e:	bb 27       	eor	r27, r27
     d70:	93 95       	inc	r25
     d72:	f6 95       	lsr	r31
     d74:	87 95       	ror	r24
     d76:	77 95       	ror	r23
     d78:	67 95       	ror	r22
     d7a:	b7 95       	ror	r27
     d7c:	f1 11       	cpse	r31, r1
     d7e:	f8 cf       	rjmp	.-16     	; 0xd70 <__floatsisf+0x1c>
     d80:	fa f4       	brpl	.+62     	; 0xdc0 <__floatsisf+0x6c>
     d82:	bb 0f       	add	r27, r27
     d84:	11 f4       	brne	.+4      	; 0xd8a <__floatsisf+0x36>
     d86:	60 ff       	sbrs	r22, 0
     d88:	1b c0       	rjmp	.+54     	; 0xdc0 <__floatsisf+0x6c>
     d8a:	6f 5f       	subi	r22, 0xFF	; 255
     d8c:	7f 4f       	sbci	r23, 0xFF	; 255
     d8e:	8f 4f       	sbci	r24, 0xFF	; 255
     d90:	9f 4f       	sbci	r25, 0xFF	; 255
     d92:	16 c0       	rjmp	.+44     	; 0xdc0 <__floatsisf+0x6c>
     d94:	88 23       	and	r24, r24
     d96:	11 f0       	breq	.+4      	; 0xd9c <__floatsisf+0x48>
     d98:	96 e9       	ldi	r25, 0x96	; 150
     d9a:	11 c0       	rjmp	.+34     	; 0xdbe <__floatsisf+0x6a>
     d9c:	77 23       	and	r23, r23
     d9e:	21 f0       	breq	.+8      	; 0xda8 <__floatsisf+0x54>
     da0:	9e e8       	ldi	r25, 0x8E	; 142
     da2:	87 2f       	mov	r24, r23
     da4:	76 2f       	mov	r23, r22
     da6:	05 c0       	rjmp	.+10     	; 0xdb2 <__floatsisf+0x5e>
     da8:	66 23       	and	r22, r22
     daa:	71 f0       	breq	.+28     	; 0xdc8 <__floatsisf+0x74>
     dac:	96 e8       	ldi	r25, 0x86	; 134
     dae:	86 2f       	mov	r24, r22
     db0:	70 e0       	ldi	r23, 0x00	; 0
     db2:	60 e0       	ldi	r22, 0x00	; 0
     db4:	2a f0       	brmi	.+10     	; 0xdc0 <__floatsisf+0x6c>
     db6:	9a 95       	dec	r25
     db8:	66 0f       	add	r22, r22
     dba:	77 1f       	adc	r23, r23
     dbc:	88 1f       	adc	r24, r24
     dbe:	da f7       	brpl	.-10     	; 0xdb6 <__floatsisf+0x62>
     dc0:	88 0f       	add	r24, r24
     dc2:	96 95       	lsr	r25
     dc4:	87 95       	ror	r24
     dc6:	97 f9       	bld	r25, 7
     dc8:	08 95       	ret

00000dca <__fp_inf>:
     dca:	97 f9       	bld	r25, 7
     dcc:	9f 67       	ori	r25, 0x7F	; 127
     dce:	80 e8       	ldi	r24, 0x80	; 128
     dd0:	70 e0       	ldi	r23, 0x00	; 0
     dd2:	60 e0       	ldi	r22, 0x00	; 0
     dd4:	08 95       	ret

00000dd6 <__fp_nan>:
     dd6:	9f ef       	ldi	r25, 0xFF	; 255
     dd8:	80 ec       	ldi	r24, 0xC0	; 192
     dda:	08 95       	ret

00000ddc <__fp_powser>:
     ddc:	df 93       	push	r29
     dde:	cf 93       	push	r28
     de0:	1f 93       	push	r17
     de2:	0f 93       	push	r16
     de4:	ff 92       	push	r15
     de6:	ef 92       	push	r14
     de8:	df 92       	push	r13
     dea:	7b 01       	movw	r14, r22
     dec:	8c 01       	movw	r16, r24
     dee:	68 94       	set
     df0:	06 c0       	rjmp	.+12     	; 0xdfe <__fp_powser+0x22>
     df2:	da 2e       	mov	r13, r26
     df4:	ef 01       	movw	r28, r30
     df6:	0e 94 78 07 	call	0xef0	; 0xef0 <__mulsf3x>
     dfa:	fe 01       	movw	r30, r28
     dfc:	e8 94       	clt
     dfe:	a5 91       	lpm	r26, Z+
     e00:	25 91       	lpm	r18, Z+
     e02:	35 91       	lpm	r19, Z+
     e04:	45 91       	lpm	r20, Z+
     e06:	55 91       	lpm	r21, Z+
     e08:	a6 f3       	brts	.-24     	; 0xdf2 <__fp_powser+0x16>
     e0a:	ef 01       	movw	r28, r30
     e0c:	0e 94 6f 05 	call	0xade	; 0xade <__addsf3x>
     e10:	fe 01       	movw	r30, r28
     e12:	97 01       	movw	r18, r14
     e14:	a8 01       	movw	r20, r16
     e16:	da 94       	dec	r13
     e18:	69 f7       	brne	.-38     	; 0xdf4 <__fp_powser+0x18>
     e1a:	df 90       	pop	r13
     e1c:	ef 90       	pop	r14
     e1e:	ff 90       	pop	r15
     e20:	0f 91       	pop	r16
     e22:	1f 91       	pop	r17
     e24:	cf 91       	pop	r28
     e26:	df 91       	pop	r29
     e28:	08 95       	ret

00000e2a <__fp_pscA>:
     e2a:	00 24       	eor	r0, r0
     e2c:	0a 94       	dec	r0
     e2e:	16 16       	cp	r1, r22
     e30:	17 06       	cpc	r1, r23
     e32:	18 06       	cpc	r1, r24
     e34:	09 06       	cpc	r0, r25
     e36:	08 95       	ret

00000e38 <__fp_pscB>:
     e38:	00 24       	eor	r0, r0
     e3a:	0a 94       	dec	r0
     e3c:	12 16       	cp	r1, r18
     e3e:	13 06       	cpc	r1, r19
     e40:	14 06       	cpc	r1, r20
     e42:	05 06       	cpc	r0, r21
     e44:	08 95       	ret

00000e46 <__fp_round>:
     e46:	09 2e       	mov	r0, r25
     e48:	03 94       	inc	r0
     e4a:	00 0c       	add	r0, r0
     e4c:	11 f4       	brne	.+4      	; 0xe52 <__fp_round+0xc>
     e4e:	88 23       	and	r24, r24
     e50:	52 f0       	brmi	.+20     	; 0xe66 <__fp_round+0x20>
     e52:	bb 0f       	add	r27, r27
     e54:	40 f4       	brcc	.+16     	; 0xe66 <__fp_round+0x20>
     e56:	bf 2b       	or	r27, r31
     e58:	11 f4       	brne	.+4      	; 0xe5e <__fp_round+0x18>
     e5a:	60 ff       	sbrs	r22, 0
     e5c:	04 c0       	rjmp	.+8      	; 0xe66 <__fp_round+0x20>
     e5e:	6f 5f       	subi	r22, 0xFF	; 255
     e60:	7f 4f       	sbci	r23, 0xFF	; 255
     e62:	8f 4f       	sbci	r24, 0xFF	; 255
     e64:	9f 4f       	sbci	r25, 0xFF	; 255
     e66:	08 95       	ret

00000e68 <__fp_split3>:
     e68:	57 fd       	sbrc	r21, 7
     e6a:	90 58       	subi	r25, 0x80	; 128
     e6c:	44 0f       	add	r20, r20
     e6e:	55 1f       	adc	r21, r21
     e70:	59 f0       	breq	.+22     	; 0xe88 <__fp_splitA+0x10>
     e72:	5f 3f       	cpi	r21, 0xFF	; 255
     e74:	71 f0       	breq	.+28     	; 0xe92 <__fp_splitA+0x1a>
     e76:	47 95       	ror	r20

00000e78 <__fp_splitA>:
     e78:	88 0f       	add	r24, r24
     e7a:	97 fb       	bst	r25, 7
     e7c:	99 1f       	adc	r25, r25
     e7e:	61 f0       	breq	.+24     	; 0xe98 <__fp_splitA+0x20>
     e80:	9f 3f       	cpi	r25, 0xFF	; 255
     e82:	79 f0       	breq	.+30     	; 0xea2 <__fp_splitA+0x2a>
     e84:	87 95       	ror	r24
     e86:	08 95       	ret
     e88:	12 16       	cp	r1, r18
     e8a:	13 06       	cpc	r1, r19
     e8c:	14 06       	cpc	r1, r20
     e8e:	55 1f       	adc	r21, r21
     e90:	f2 cf       	rjmp	.-28     	; 0xe76 <__fp_split3+0xe>
     e92:	46 95       	lsr	r20
     e94:	f1 df       	rcall	.-30     	; 0xe78 <__fp_splitA>
     e96:	08 c0       	rjmp	.+16     	; 0xea8 <__fp_splitA+0x30>
     e98:	16 16       	cp	r1, r22
     e9a:	17 06       	cpc	r1, r23
     e9c:	18 06       	cpc	r1, r24
     e9e:	99 1f       	adc	r25, r25
     ea0:	f1 cf       	rjmp	.-30     	; 0xe84 <__fp_splitA+0xc>
     ea2:	86 95       	lsr	r24
     ea4:	71 05       	cpc	r23, r1
     ea6:	61 05       	cpc	r22, r1
     ea8:	08 94       	sec
     eaa:	08 95       	ret

00000eac <__fp_zero>:
     eac:	e8 94       	clt

00000eae <__fp_szero>:
     eae:	bb 27       	eor	r27, r27
     eb0:	66 27       	eor	r22, r22
     eb2:	77 27       	eor	r23, r23
     eb4:	cb 01       	movw	r24, r22
     eb6:	97 f9       	bld	r25, 7
     eb8:	08 95       	ret

00000eba <inverse>:
     eba:	9b 01       	movw	r18, r22
     ebc:	ac 01       	movw	r20, r24
     ebe:	60 e0       	ldi	r22, 0x00	; 0
     ec0:	70 e0       	ldi	r23, 0x00	; 0
     ec2:	80 e8       	ldi	r24, 0x80	; 128
     ec4:	9f e3       	ldi	r25, 0x3F	; 63
     ec6:	0c 94 36 06 	jmp	0xc6c	; 0xc6c <__divsf3>

00000eca <__mulsf3>:
     eca:	0e 94 78 07 	call	0xef0	; 0xef0 <__mulsf3x>
     ece:	0c 94 23 07 	jmp	0xe46	; 0xe46 <__fp_round>
     ed2:	0e 94 15 07 	call	0xe2a	; 0xe2a <__fp_pscA>
     ed6:	38 f0       	brcs	.+14     	; 0xee6 <__mulsf3+0x1c>
     ed8:	0e 94 1c 07 	call	0xe38	; 0xe38 <__fp_pscB>
     edc:	20 f0       	brcs	.+8      	; 0xee6 <__mulsf3+0x1c>
     ede:	95 23       	and	r25, r21
     ee0:	11 f0       	breq	.+4      	; 0xee6 <__mulsf3+0x1c>
     ee2:	0c 94 e5 06 	jmp	0xdca	; 0xdca <__fp_inf>
     ee6:	0c 94 eb 06 	jmp	0xdd6	; 0xdd6 <__fp_nan>
     eea:	11 24       	eor	r1, r1
     eec:	0c 94 57 07 	jmp	0xeae	; 0xeae <__fp_szero>

00000ef0 <__mulsf3x>:
     ef0:	0e 94 34 07 	call	0xe68	; 0xe68 <__fp_split3>
     ef4:	70 f3       	brcs	.-36     	; 0xed2 <__mulsf3+0x8>

00000ef6 <__mulsf3_pse>:
     ef6:	95 9f       	mul	r25, r21
     ef8:	c1 f3       	breq	.-16     	; 0xeea <__mulsf3+0x20>
     efa:	95 0f       	add	r25, r21
     efc:	50 e0       	ldi	r21, 0x00	; 0
     efe:	55 1f       	adc	r21, r21
     f00:	62 9f       	mul	r22, r18
     f02:	f0 01       	movw	r30, r0
     f04:	72 9f       	mul	r23, r18
     f06:	bb 27       	eor	r27, r27
     f08:	f0 0d       	add	r31, r0
     f0a:	b1 1d       	adc	r27, r1
     f0c:	63 9f       	mul	r22, r19
     f0e:	aa 27       	eor	r26, r26
     f10:	f0 0d       	add	r31, r0
     f12:	b1 1d       	adc	r27, r1
     f14:	aa 1f       	adc	r26, r26
     f16:	64 9f       	mul	r22, r20
     f18:	66 27       	eor	r22, r22
     f1a:	b0 0d       	add	r27, r0
     f1c:	a1 1d       	adc	r26, r1
     f1e:	66 1f       	adc	r22, r22
     f20:	82 9f       	mul	r24, r18
     f22:	22 27       	eor	r18, r18
     f24:	b0 0d       	add	r27, r0
     f26:	a1 1d       	adc	r26, r1
     f28:	62 1f       	adc	r22, r18
     f2a:	73 9f       	mul	r23, r19
     f2c:	b0 0d       	add	r27, r0
     f2e:	a1 1d       	adc	r26, r1
     f30:	62 1f       	adc	r22, r18
     f32:	83 9f       	mul	r24, r19
     f34:	a0 0d       	add	r26, r0
     f36:	61 1d       	adc	r22, r1
     f38:	22 1f       	adc	r18, r18
     f3a:	74 9f       	mul	r23, r20
     f3c:	33 27       	eor	r19, r19
     f3e:	a0 0d       	add	r26, r0
     f40:	61 1d       	adc	r22, r1
     f42:	23 1f       	adc	r18, r19
     f44:	84 9f       	mul	r24, r20
     f46:	60 0d       	add	r22, r0
     f48:	21 1d       	adc	r18, r1
     f4a:	82 2f       	mov	r24, r18
     f4c:	76 2f       	mov	r23, r22
     f4e:	6a 2f       	mov	r22, r26
     f50:	11 24       	eor	r1, r1
     f52:	9f 57       	subi	r25, 0x7F	; 127
     f54:	50 40       	sbci	r21, 0x00	; 0
     f56:	9a f0       	brmi	.+38     	; 0xf7e <__mulsf3_pse+0x88>
     f58:	f1 f0       	breq	.+60     	; 0xf96 <__mulsf3_pse+0xa0>
     f5a:	88 23       	and	r24, r24
     f5c:	4a f0       	brmi	.+18     	; 0xf70 <__mulsf3_pse+0x7a>
     f5e:	ee 0f       	add	r30, r30
     f60:	ff 1f       	adc	r31, r31
     f62:	bb 1f       	adc	r27, r27
     f64:	66 1f       	adc	r22, r22
     f66:	77 1f       	adc	r23, r23
     f68:	88 1f       	adc	r24, r24
     f6a:	91 50       	subi	r25, 0x01	; 1
     f6c:	50 40       	sbci	r21, 0x00	; 0
     f6e:	a9 f7       	brne	.-22     	; 0xf5a <__mulsf3_pse+0x64>
     f70:	9e 3f       	cpi	r25, 0xFE	; 254
     f72:	51 05       	cpc	r21, r1
     f74:	80 f0       	brcs	.+32     	; 0xf96 <__mulsf3_pse+0xa0>
     f76:	0c 94 e5 06 	jmp	0xdca	; 0xdca <__fp_inf>
     f7a:	0c 94 57 07 	jmp	0xeae	; 0xeae <__fp_szero>
     f7e:	5f 3f       	cpi	r21, 0xFF	; 255
     f80:	e4 f3       	brlt	.-8      	; 0xf7a <__mulsf3_pse+0x84>
     f82:	98 3e       	cpi	r25, 0xE8	; 232
     f84:	d4 f3       	brlt	.-12     	; 0xf7a <__mulsf3_pse+0x84>
     f86:	86 95       	lsr	r24
     f88:	77 95       	ror	r23
     f8a:	67 95       	ror	r22
     f8c:	b7 95       	ror	r27
     f8e:	f7 95       	ror	r31
     f90:	e7 95       	ror	r30
     f92:	9f 5f       	subi	r25, 0xFF	; 255
     f94:	c1 f7       	brne	.-16     	; 0xf86 <__mulsf3_pse+0x90>
     f96:	fe 2b       	or	r31, r30
     f98:	88 0f       	add	r24, r24
     f9a:	91 1d       	adc	r25, r1
     f9c:	96 95       	lsr	r25
     f9e:	87 95       	ror	r24
     fa0:	97 f9       	bld	r25, 7
     fa2:	08 95       	ret

00000fa4 <square>:
     fa4:	9b 01       	movw	r18, r22
     fa6:	ac 01       	movw	r20, r24
     fa8:	0c 94 65 07 	jmp	0xeca	; 0xeca <__mulsf3>

00000fac <dtostrf>:
     fac:	ef 92       	push	r14
     fae:	0f 93       	push	r16
     fb0:	1f 93       	push	r17
     fb2:	cf 93       	push	r28
     fb4:	df 93       	push	r29
     fb6:	e8 01       	movw	r28, r16
     fb8:	47 fd       	sbrc	r20, 7
     fba:	02 c0       	rjmp	.+4      	; 0xfc0 <dtostrf+0x14>
     fbc:	34 e0       	ldi	r19, 0x04	; 4
     fbe:	01 c0       	rjmp	.+2      	; 0xfc2 <dtostrf+0x16>
     fc0:	34 e1       	ldi	r19, 0x14	; 20
     fc2:	04 2e       	mov	r0, r20
     fc4:	00 0c       	add	r0, r0
     fc6:	55 0b       	sbc	r21, r21
     fc8:	57 ff       	sbrs	r21, 7
     fca:	03 c0       	rjmp	.+6      	; 0xfd2 <dtostrf+0x26>
     fcc:	51 95       	neg	r21
     fce:	41 95       	neg	r20
     fd0:	51 09       	sbc	r21, r1
     fd2:	e3 2e       	mov	r14, r19
     fd4:	02 2f       	mov	r16, r18
     fd6:	24 2f       	mov	r18, r20
     fd8:	ae 01       	movw	r20, r28
     fda:	0e 94 f9 09 	call	0x13f2	; 0x13f2 <dtoa_prf>
     fde:	ce 01       	movw	r24, r28
     fe0:	df 91       	pop	r29
     fe2:	cf 91       	pop	r28
     fe4:	1f 91       	pop	r17
     fe6:	0f 91       	pop	r16
     fe8:	ef 90       	pop	r14
     fea:	08 95       	ret

00000fec <sprintf>:
     fec:	ae e0       	ldi	r26, 0x0E	; 14
     fee:	b0 e0       	ldi	r27, 0x00	; 0
     ff0:	ec ef       	ldi	r30, 0xFC	; 252
     ff2:	f7 e0       	ldi	r31, 0x07	; 7
     ff4:	0c 94 e9 0c 	jmp	0x19d2	; 0x19d2 <__prologue_saves__+0x1c>
     ff8:	0d 89       	ldd	r16, Y+21	; 0x15
     ffa:	1e 89       	ldd	r17, Y+22	; 0x16
     ffc:	86 e0       	ldi	r24, 0x06	; 6
     ffe:	8c 83       	std	Y+4, r24	; 0x04
    1000:	1a 83       	std	Y+2, r17	; 0x02
    1002:	09 83       	std	Y+1, r16	; 0x01
    1004:	8f ef       	ldi	r24, 0xFF	; 255
    1006:	9f e7       	ldi	r25, 0x7F	; 127
    1008:	9e 83       	std	Y+6, r25	; 0x06
    100a:	8d 83       	std	Y+5, r24	; 0x05
    100c:	ae 01       	movw	r20, r28
    100e:	47 5e       	subi	r20, 0xE7	; 231
    1010:	5f 4f       	sbci	r21, 0xFF	; 255
    1012:	6f 89       	ldd	r22, Y+23	; 0x17
    1014:	78 8d       	ldd	r23, Y+24	; 0x18
    1016:	ce 01       	movw	r24, r28
    1018:	01 96       	adiw	r24, 0x01	; 1
    101a:	0e 94 18 08 	call	0x1030	; 0x1030 <vfprintf>
    101e:	ef 81       	ldd	r30, Y+7	; 0x07
    1020:	f8 85       	ldd	r31, Y+8	; 0x08
    1022:	e0 0f       	add	r30, r16
    1024:	f1 1f       	adc	r31, r17
    1026:	10 82       	st	Z, r1
    1028:	2e 96       	adiw	r28, 0x0e	; 14
    102a:	e4 e0       	ldi	r30, 0x04	; 4
    102c:	0c 94 05 0d 	jmp	0x1a0a	; 0x1a0a <__epilogue_restores__+0x1c>

00001030 <vfprintf>:
    1030:	ab e0       	ldi	r26, 0x0B	; 11
    1032:	b0 e0       	ldi	r27, 0x00	; 0
    1034:	ee e1       	ldi	r30, 0x1E	; 30
    1036:	f8 e0       	ldi	r31, 0x08	; 8
    1038:	0c 94 db 0c 	jmp	0x19b6	; 0x19b6 <__prologue_saves__>
    103c:	6c 01       	movw	r12, r24
    103e:	7b 01       	movw	r14, r22
    1040:	8a 01       	movw	r16, r20
    1042:	fc 01       	movw	r30, r24
    1044:	17 82       	std	Z+7, r1	; 0x07
    1046:	16 82       	std	Z+6, r1	; 0x06
    1048:	83 81       	ldd	r24, Z+3	; 0x03
    104a:	81 ff       	sbrs	r24, 1
    104c:	cc c1       	rjmp	.+920    	; 0x13e6 <vfprintf+0x3b6>
    104e:	ce 01       	movw	r24, r28
    1050:	01 96       	adiw	r24, 0x01	; 1
    1052:	3c 01       	movw	r6, r24
    1054:	f6 01       	movw	r30, r12
    1056:	93 81       	ldd	r25, Z+3	; 0x03
    1058:	f7 01       	movw	r30, r14
    105a:	93 fd       	sbrc	r25, 3
    105c:	85 91       	lpm	r24, Z+
    105e:	93 ff       	sbrs	r25, 3
    1060:	81 91       	ld	r24, Z+
    1062:	7f 01       	movw	r14, r30
    1064:	88 23       	and	r24, r24
    1066:	09 f4       	brne	.+2      	; 0x106a <vfprintf+0x3a>
    1068:	ba c1       	rjmp	.+884    	; 0x13de <vfprintf+0x3ae>
    106a:	85 32       	cpi	r24, 0x25	; 37
    106c:	39 f4       	brne	.+14     	; 0x107c <vfprintf+0x4c>
    106e:	93 fd       	sbrc	r25, 3
    1070:	85 91       	lpm	r24, Z+
    1072:	93 ff       	sbrs	r25, 3
    1074:	81 91       	ld	r24, Z+
    1076:	7f 01       	movw	r14, r30
    1078:	85 32       	cpi	r24, 0x25	; 37
    107a:	29 f4       	brne	.+10     	; 0x1086 <vfprintf+0x56>
    107c:	b6 01       	movw	r22, r12
    107e:	90 e0       	ldi	r25, 0x00	; 0
    1080:	0e 94 41 0c 	call	0x1882	; 0x1882 <fputc>
    1084:	e7 cf       	rjmp	.-50     	; 0x1054 <vfprintf+0x24>
    1086:	91 2c       	mov	r9, r1
    1088:	21 2c       	mov	r2, r1
    108a:	31 2c       	mov	r3, r1
    108c:	ff e1       	ldi	r31, 0x1F	; 31
    108e:	f3 15       	cp	r31, r3
    1090:	d8 f0       	brcs	.+54     	; 0x10c8 <vfprintf+0x98>
    1092:	8b 32       	cpi	r24, 0x2B	; 43
    1094:	79 f0       	breq	.+30     	; 0x10b4 <vfprintf+0x84>
    1096:	38 f4       	brcc	.+14     	; 0x10a6 <vfprintf+0x76>
    1098:	80 32       	cpi	r24, 0x20	; 32
    109a:	79 f0       	breq	.+30     	; 0x10ba <vfprintf+0x8a>
    109c:	83 32       	cpi	r24, 0x23	; 35
    109e:	a1 f4       	brne	.+40     	; 0x10c8 <vfprintf+0x98>
    10a0:	23 2d       	mov	r18, r3
    10a2:	20 61       	ori	r18, 0x10	; 16
    10a4:	1d c0       	rjmp	.+58     	; 0x10e0 <vfprintf+0xb0>
    10a6:	8d 32       	cpi	r24, 0x2D	; 45
    10a8:	61 f0       	breq	.+24     	; 0x10c2 <vfprintf+0x92>
    10aa:	80 33       	cpi	r24, 0x30	; 48
    10ac:	69 f4       	brne	.+26     	; 0x10c8 <vfprintf+0x98>
    10ae:	23 2d       	mov	r18, r3
    10b0:	21 60       	ori	r18, 0x01	; 1
    10b2:	16 c0       	rjmp	.+44     	; 0x10e0 <vfprintf+0xb0>
    10b4:	83 2d       	mov	r24, r3
    10b6:	82 60       	ori	r24, 0x02	; 2
    10b8:	38 2e       	mov	r3, r24
    10ba:	e3 2d       	mov	r30, r3
    10bc:	e4 60       	ori	r30, 0x04	; 4
    10be:	3e 2e       	mov	r3, r30
    10c0:	2a c0       	rjmp	.+84     	; 0x1116 <vfprintf+0xe6>
    10c2:	f3 2d       	mov	r31, r3
    10c4:	f8 60       	ori	r31, 0x08	; 8
    10c6:	1d c0       	rjmp	.+58     	; 0x1102 <vfprintf+0xd2>
    10c8:	37 fc       	sbrc	r3, 7
    10ca:	2d c0       	rjmp	.+90     	; 0x1126 <vfprintf+0xf6>
    10cc:	20 ed       	ldi	r18, 0xD0	; 208
    10ce:	28 0f       	add	r18, r24
    10d0:	2a 30       	cpi	r18, 0x0A	; 10
    10d2:	40 f0       	brcs	.+16     	; 0x10e4 <vfprintf+0xb4>
    10d4:	8e 32       	cpi	r24, 0x2E	; 46
    10d6:	b9 f4       	brne	.+46     	; 0x1106 <vfprintf+0xd6>
    10d8:	36 fc       	sbrc	r3, 6
    10da:	81 c1       	rjmp	.+770    	; 0x13de <vfprintf+0x3ae>
    10dc:	23 2d       	mov	r18, r3
    10de:	20 64       	ori	r18, 0x40	; 64
    10e0:	32 2e       	mov	r3, r18
    10e2:	19 c0       	rjmp	.+50     	; 0x1116 <vfprintf+0xe6>
    10e4:	36 fe       	sbrs	r3, 6
    10e6:	06 c0       	rjmp	.+12     	; 0x10f4 <vfprintf+0xc4>
    10e8:	8a e0       	ldi	r24, 0x0A	; 10
    10ea:	98 9e       	mul	r9, r24
    10ec:	20 0d       	add	r18, r0
    10ee:	11 24       	eor	r1, r1
    10f0:	92 2e       	mov	r9, r18
    10f2:	11 c0       	rjmp	.+34     	; 0x1116 <vfprintf+0xe6>
    10f4:	ea e0       	ldi	r30, 0x0A	; 10
    10f6:	2e 9e       	mul	r2, r30
    10f8:	20 0d       	add	r18, r0
    10fa:	11 24       	eor	r1, r1
    10fc:	22 2e       	mov	r2, r18
    10fe:	f3 2d       	mov	r31, r3
    1100:	f0 62       	ori	r31, 0x20	; 32
    1102:	3f 2e       	mov	r3, r31
    1104:	08 c0       	rjmp	.+16     	; 0x1116 <vfprintf+0xe6>
    1106:	8c 36       	cpi	r24, 0x6C	; 108
    1108:	21 f4       	brne	.+8      	; 0x1112 <vfprintf+0xe2>
    110a:	83 2d       	mov	r24, r3
    110c:	80 68       	ori	r24, 0x80	; 128
    110e:	38 2e       	mov	r3, r24
    1110:	02 c0       	rjmp	.+4      	; 0x1116 <vfprintf+0xe6>
    1112:	88 36       	cpi	r24, 0x68	; 104
    1114:	41 f4       	brne	.+16     	; 0x1126 <vfprintf+0xf6>
    1116:	f7 01       	movw	r30, r14
    1118:	93 fd       	sbrc	r25, 3
    111a:	85 91       	lpm	r24, Z+
    111c:	93 ff       	sbrs	r25, 3
    111e:	81 91       	ld	r24, Z+
    1120:	7f 01       	movw	r14, r30
    1122:	81 11       	cpse	r24, r1
    1124:	b3 cf       	rjmp	.-154    	; 0x108c <vfprintf+0x5c>
    1126:	98 2f       	mov	r25, r24
    1128:	9f 7d       	andi	r25, 0xDF	; 223
    112a:	95 54       	subi	r25, 0x45	; 69
    112c:	93 30       	cpi	r25, 0x03	; 3
    112e:	28 f4       	brcc	.+10     	; 0x113a <vfprintf+0x10a>
    1130:	0c 5f       	subi	r16, 0xFC	; 252
    1132:	1f 4f       	sbci	r17, 0xFF	; 255
    1134:	9f e3       	ldi	r25, 0x3F	; 63
    1136:	99 83       	std	Y+1, r25	; 0x01
    1138:	0d c0       	rjmp	.+26     	; 0x1154 <vfprintf+0x124>
    113a:	83 36       	cpi	r24, 0x63	; 99
    113c:	31 f0       	breq	.+12     	; 0x114a <vfprintf+0x11a>
    113e:	83 37       	cpi	r24, 0x73	; 115
    1140:	71 f0       	breq	.+28     	; 0x115e <vfprintf+0x12e>
    1142:	83 35       	cpi	r24, 0x53	; 83
    1144:	09 f0       	breq	.+2      	; 0x1148 <vfprintf+0x118>
    1146:	59 c0       	rjmp	.+178    	; 0x11fa <vfprintf+0x1ca>
    1148:	21 c0       	rjmp	.+66     	; 0x118c <vfprintf+0x15c>
    114a:	f8 01       	movw	r30, r16
    114c:	80 81       	ld	r24, Z
    114e:	89 83       	std	Y+1, r24	; 0x01
    1150:	0e 5f       	subi	r16, 0xFE	; 254
    1152:	1f 4f       	sbci	r17, 0xFF	; 255
    1154:	88 24       	eor	r8, r8
    1156:	83 94       	inc	r8
    1158:	91 2c       	mov	r9, r1
    115a:	53 01       	movw	r10, r6
    115c:	13 c0       	rjmp	.+38     	; 0x1184 <vfprintf+0x154>
    115e:	28 01       	movw	r4, r16
    1160:	f2 e0       	ldi	r31, 0x02	; 2
    1162:	4f 0e       	add	r4, r31
    1164:	51 1c       	adc	r5, r1
    1166:	f8 01       	movw	r30, r16
    1168:	a0 80       	ld	r10, Z
    116a:	b1 80       	ldd	r11, Z+1	; 0x01
    116c:	36 fe       	sbrs	r3, 6
    116e:	03 c0       	rjmp	.+6      	; 0x1176 <vfprintf+0x146>
    1170:	69 2d       	mov	r22, r9
    1172:	70 e0       	ldi	r23, 0x00	; 0
    1174:	02 c0       	rjmp	.+4      	; 0x117a <vfprintf+0x14a>
    1176:	6f ef       	ldi	r22, 0xFF	; 255
    1178:	7f ef       	ldi	r23, 0xFF	; 255
    117a:	c5 01       	movw	r24, r10
    117c:	0e 94 36 0c 	call	0x186c	; 0x186c <strnlen>
    1180:	4c 01       	movw	r8, r24
    1182:	82 01       	movw	r16, r4
    1184:	f3 2d       	mov	r31, r3
    1186:	ff 77       	andi	r31, 0x7F	; 127
    1188:	3f 2e       	mov	r3, r31
    118a:	16 c0       	rjmp	.+44     	; 0x11b8 <vfprintf+0x188>
    118c:	28 01       	movw	r4, r16
    118e:	22 e0       	ldi	r18, 0x02	; 2
    1190:	42 0e       	add	r4, r18
    1192:	51 1c       	adc	r5, r1
    1194:	f8 01       	movw	r30, r16
    1196:	a0 80       	ld	r10, Z
    1198:	b1 80       	ldd	r11, Z+1	; 0x01
    119a:	36 fe       	sbrs	r3, 6
    119c:	03 c0       	rjmp	.+6      	; 0x11a4 <vfprintf+0x174>
    119e:	69 2d       	mov	r22, r9
    11a0:	70 e0       	ldi	r23, 0x00	; 0
    11a2:	02 c0       	rjmp	.+4      	; 0x11a8 <vfprintf+0x178>
    11a4:	6f ef       	ldi	r22, 0xFF	; 255
    11a6:	7f ef       	ldi	r23, 0xFF	; 255
    11a8:	c5 01       	movw	r24, r10
    11aa:	0e 94 2b 0c 	call	0x1856	; 0x1856 <strnlen_P>
    11ae:	4c 01       	movw	r8, r24
    11b0:	f3 2d       	mov	r31, r3
    11b2:	f0 68       	ori	r31, 0x80	; 128
    11b4:	3f 2e       	mov	r3, r31
    11b6:	82 01       	movw	r16, r4
    11b8:	33 fc       	sbrc	r3, 3
    11ba:	1b c0       	rjmp	.+54     	; 0x11f2 <vfprintf+0x1c2>
    11bc:	82 2d       	mov	r24, r2
    11be:	90 e0       	ldi	r25, 0x00	; 0
    11c0:	88 16       	cp	r8, r24
    11c2:	99 06       	cpc	r9, r25
    11c4:	b0 f4       	brcc	.+44     	; 0x11f2 <vfprintf+0x1c2>
    11c6:	b6 01       	movw	r22, r12
    11c8:	80 e2       	ldi	r24, 0x20	; 32
    11ca:	90 e0       	ldi	r25, 0x00	; 0
    11cc:	0e 94 41 0c 	call	0x1882	; 0x1882 <fputc>
    11d0:	2a 94       	dec	r2
    11d2:	f4 cf       	rjmp	.-24     	; 0x11bc <vfprintf+0x18c>
    11d4:	f5 01       	movw	r30, r10
    11d6:	37 fc       	sbrc	r3, 7
    11d8:	85 91       	lpm	r24, Z+
    11da:	37 fe       	sbrs	r3, 7
    11dc:	81 91       	ld	r24, Z+
    11de:	5f 01       	movw	r10, r30
    11e0:	b6 01       	movw	r22, r12
    11e2:	90 e0       	ldi	r25, 0x00	; 0
    11e4:	0e 94 41 0c 	call	0x1882	; 0x1882 <fputc>
    11e8:	21 10       	cpse	r2, r1
    11ea:	2a 94       	dec	r2
    11ec:	21 e0       	ldi	r18, 0x01	; 1
    11ee:	82 1a       	sub	r8, r18
    11f0:	91 08       	sbc	r9, r1
    11f2:	81 14       	cp	r8, r1
    11f4:	91 04       	cpc	r9, r1
    11f6:	71 f7       	brne	.-36     	; 0x11d4 <vfprintf+0x1a4>
    11f8:	e8 c0       	rjmp	.+464    	; 0x13ca <vfprintf+0x39a>
    11fa:	84 36       	cpi	r24, 0x64	; 100
    11fc:	11 f0       	breq	.+4      	; 0x1202 <vfprintf+0x1d2>
    11fe:	89 36       	cpi	r24, 0x69	; 105
    1200:	41 f5       	brne	.+80     	; 0x1252 <vfprintf+0x222>
    1202:	f8 01       	movw	r30, r16
    1204:	37 fe       	sbrs	r3, 7
    1206:	07 c0       	rjmp	.+14     	; 0x1216 <vfprintf+0x1e6>
    1208:	60 81       	ld	r22, Z
    120a:	71 81       	ldd	r23, Z+1	; 0x01
    120c:	82 81       	ldd	r24, Z+2	; 0x02
    120e:	93 81       	ldd	r25, Z+3	; 0x03
    1210:	0c 5f       	subi	r16, 0xFC	; 252
    1212:	1f 4f       	sbci	r17, 0xFF	; 255
    1214:	08 c0       	rjmp	.+16     	; 0x1226 <vfprintf+0x1f6>
    1216:	60 81       	ld	r22, Z
    1218:	71 81       	ldd	r23, Z+1	; 0x01
    121a:	07 2e       	mov	r0, r23
    121c:	00 0c       	add	r0, r0
    121e:	88 0b       	sbc	r24, r24
    1220:	99 0b       	sbc	r25, r25
    1222:	0e 5f       	subi	r16, 0xFE	; 254
    1224:	1f 4f       	sbci	r17, 0xFF	; 255
    1226:	f3 2d       	mov	r31, r3
    1228:	ff 76       	andi	r31, 0x6F	; 111
    122a:	3f 2e       	mov	r3, r31
    122c:	97 ff       	sbrs	r25, 7
    122e:	09 c0       	rjmp	.+18     	; 0x1242 <vfprintf+0x212>
    1230:	90 95       	com	r25
    1232:	80 95       	com	r24
    1234:	70 95       	com	r23
    1236:	61 95       	neg	r22
    1238:	7f 4f       	sbci	r23, 0xFF	; 255
    123a:	8f 4f       	sbci	r24, 0xFF	; 255
    123c:	9f 4f       	sbci	r25, 0xFF	; 255
    123e:	f0 68       	ori	r31, 0x80	; 128
    1240:	3f 2e       	mov	r3, r31
    1242:	2a e0       	ldi	r18, 0x0A	; 10
    1244:	30 e0       	ldi	r19, 0x00	; 0
    1246:	a3 01       	movw	r20, r6
    1248:	0e 94 7d 0c 	call	0x18fa	; 0x18fa <__ultoa_invert>
    124c:	88 2e       	mov	r8, r24
    124e:	86 18       	sub	r8, r6
    1250:	45 c0       	rjmp	.+138    	; 0x12dc <vfprintf+0x2ac>
    1252:	85 37       	cpi	r24, 0x75	; 117
    1254:	31 f4       	brne	.+12     	; 0x1262 <vfprintf+0x232>
    1256:	23 2d       	mov	r18, r3
    1258:	2f 7e       	andi	r18, 0xEF	; 239
    125a:	b2 2e       	mov	r11, r18
    125c:	2a e0       	ldi	r18, 0x0A	; 10
    125e:	30 e0       	ldi	r19, 0x00	; 0
    1260:	25 c0       	rjmp	.+74     	; 0x12ac <vfprintf+0x27c>
    1262:	93 2d       	mov	r25, r3
    1264:	99 7f       	andi	r25, 0xF9	; 249
    1266:	b9 2e       	mov	r11, r25
    1268:	8f 36       	cpi	r24, 0x6F	; 111
    126a:	c1 f0       	breq	.+48     	; 0x129c <vfprintf+0x26c>
    126c:	18 f4       	brcc	.+6      	; 0x1274 <vfprintf+0x244>
    126e:	88 35       	cpi	r24, 0x58	; 88
    1270:	79 f0       	breq	.+30     	; 0x1290 <vfprintf+0x260>
    1272:	b5 c0       	rjmp	.+362    	; 0x13de <vfprintf+0x3ae>
    1274:	80 37       	cpi	r24, 0x70	; 112
    1276:	19 f0       	breq	.+6      	; 0x127e <vfprintf+0x24e>
    1278:	88 37       	cpi	r24, 0x78	; 120
    127a:	21 f0       	breq	.+8      	; 0x1284 <vfprintf+0x254>
    127c:	b0 c0       	rjmp	.+352    	; 0x13de <vfprintf+0x3ae>
    127e:	e9 2f       	mov	r30, r25
    1280:	e0 61       	ori	r30, 0x10	; 16
    1282:	be 2e       	mov	r11, r30
    1284:	b4 fe       	sbrs	r11, 4
    1286:	0d c0       	rjmp	.+26     	; 0x12a2 <vfprintf+0x272>
    1288:	fb 2d       	mov	r31, r11
    128a:	f4 60       	ori	r31, 0x04	; 4
    128c:	bf 2e       	mov	r11, r31
    128e:	09 c0       	rjmp	.+18     	; 0x12a2 <vfprintf+0x272>
    1290:	34 fe       	sbrs	r3, 4
    1292:	0a c0       	rjmp	.+20     	; 0x12a8 <vfprintf+0x278>
    1294:	29 2f       	mov	r18, r25
    1296:	26 60       	ori	r18, 0x06	; 6
    1298:	b2 2e       	mov	r11, r18
    129a:	06 c0       	rjmp	.+12     	; 0x12a8 <vfprintf+0x278>
    129c:	28 e0       	ldi	r18, 0x08	; 8
    129e:	30 e0       	ldi	r19, 0x00	; 0
    12a0:	05 c0       	rjmp	.+10     	; 0x12ac <vfprintf+0x27c>
    12a2:	20 e1       	ldi	r18, 0x10	; 16
    12a4:	30 e0       	ldi	r19, 0x00	; 0
    12a6:	02 c0       	rjmp	.+4      	; 0x12ac <vfprintf+0x27c>
    12a8:	20 e1       	ldi	r18, 0x10	; 16
    12aa:	32 e0       	ldi	r19, 0x02	; 2
    12ac:	f8 01       	movw	r30, r16
    12ae:	b7 fe       	sbrs	r11, 7
    12b0:	07 c0       	rjmp	.+14     	; 0x12c0 <vfprintf+0x290>
    12b2:	60 81       	ld	r22, Z
    12b4:	71 81       	ldd	r23, Z+1	; 0x01
    12b6:	82 81       	ldd	r24, Z+2	; 0x02
    12b8:	93 81       	ldd	r25, Z+3	; 0x03
    12ba:	0c 5f       	subi	r16, 0xFC	; 252
    12bc:	1f 4f       	sbci	r17, 0xFF	; 255
    12be:	06 c0       	rjmp	.+12     	; 0x12cc <vfprintf+0x29c>
    12c0:	60 81       	ld	r22, Z
    12c2:	71 81       	ldd	r23, Z+1	; 0x01
    12c4:	80 e0       	ldi	r24, 0x00	; 0
    12c6:	90 e0       	ldi	r25, 0x00	; 0
    12c8:	0e 5f       	subi	r16, 0xFE	; 254
    12ca:	1f 4f       	sbci	r17, 0xFF	; 255
    12cc:	a3 01       	movw	r20, r6
    12ce:	0e 94 7d 0c 	call	0x18fa	; 0x18fa <__ultoa_invert>
    12d2:	88 2e       	mov	r8, r24
    12d4:	86 18       	sub	r8, r6
    12d6:	fb 2d       	mov	r31, r11
    12d8:	ff 77       	andi	r31, 0x7F	; 127
    12da:	3f 2e       	mov	r3, r31
    12dc:	36 fe       	sbrs	r3, 6
    12de:	0d c0       	rjmp	.+26     	; 0x12fa <vfprintf+0x2ca>
    12e0:	23 2d       	mov	r18, r3
    12e2:	2e 7f       	andi	r18, 0xFE	; 254
    12e4:	a2 2e       	mov	r10, r18
    12e6:	89 14       	cp	r8, r9
    12e8:	58 f4       	brcc	.+22     	; 0x1300 <vfprintf+0x2d0>
    12ea:	34 fe       	sbrs	r3, 4
    12ec:	0b c0       	rjmp	.+22     	; 0x1304 <vfprintf+0x2d4>
    12ee:	32 fc       	sbrc	r3, 2
    12f0:	09 c0       	rjmp	.+18     	; 0x1304 <vfprintf+0x2d4>
    12f2:	83 2d       	mov	r24, r3
    12f4:	8e 7e       	andi	r24, 0xEE	; 238
    12f6:	a8 2e       	mov	r10, r24
    12f8:	05 c0       	rjmp	.+10     	; 0x1304 <vfprintf+0x2d4>
    12fa:	b8 2c       	mov	r11, r8
    12fc:	a3 2c       	mov	r10, r3
    12fe:	03 c0       	rjmp	.+6      	; 0x1306 <vfprintf+0x2d6>
    1300:	b8 2c       	mov	r11, r8
    1302:	01 c0       	rjmp	.+2      	; 0x1306 <vfprintf+0x2d6>
    1304:	b9 2c       	mov	r11, r9
    1306:	a4 fe       	sbrs	r10, 4
    1308:	0f c0       	rjmp	.+30     	; 0x1328 <vfprintf+0x2f8>
    130a:	fe 01       	movw	r30, r28
    130c:	e8 0d       	add	r30, r8
    130e:	f1 1d       	adc	r31, r1
    1310:	80 81       	ld	r24, Z
    1312:	80 33       	cpi	r24, 0x30	; 48
    1314:	21 f4       	brne	.+8      	; 0x131e <vfprintf+0x2ee>
    1316:	9a 2d       	mov	r25, r10
    1318:	99 7e       	andi	r25, 0xE9	; 233
    131a:	a9 2e       	mov	r10, r25
    131c:	09 c0       	rjmp	.+18     	; 0x1330 <vfprintf+0x300>
    131e:	a2 fe       	sbrs	r10, 2
    1320:	06 c0       	rjmp	.+12     	; 0x132e <vfprintf+0x2fe>
    1322:	b3 94       	inc	r11
    1324:	b3 94       	inc	r11
    1326:	04 c0       	rjmp	.+8      	; 0x1330 <vfprintf+0x300>
    1328:	8a 2d       	mov	r24, r10
    132a:	86 78       	andi	r24, 0x86	; 134
    132c:	09 f0       	breq	.+2      	; 0x1330 <vfprintf+0x300>
    132e:	b3 94       	inc	r11
    1330:	a3 fc       	sbrc	r10, 3
    1332:	11 c0       	rjmp	.+34     	; 0x1356 <vfprintf+0x326>
    1334:	a0 fe       	sbrs	r10, 0
    1336:	06 c0       	rjmp	.+12     	; 0x1344 <vfprintf+0x314>
    1338:	b2 14       	cp	r11, r2
    133a:	88 f4       	brcc	.+34     	; 0x135e <vfprintf+0x32e>
    133c:	28 0c       	add	r2, r8
    133e:	92 2c       	mov	r9, r2
    1340:	9b 18       	sub	r9, r11
    1342:	0e c0       	rjmp	.+28     	; 0x1360 <vfprintf+0x330>
    1344:	b2 14       	cp	r11, r2
    1346:	60 f4       	brcc	.+24     	; 0x1360 <vfprintf+0x330>
    1348:	b6 01       	movw	r22, r12
    134a:	80 e2       	ldi	r24, 0x20	; 32
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	0e 94 41 0c 	call	0x1882	; 0x1882 <fputc>
    1352:	b3 94       	inc	r11
    1354:	f7 cf       	rjmp	.-18     	; 0x1344 <vfprintf+0x314>
    1356:	b2 14       	cp	r11, r2
    1358:	18 f4       	brcc	.+6      	; 0x1360 <vfprintf+0x330>
    135a:	2b 18       	sub	r2, r11
    135c:	02 c0       	rjmp	.+4      	; 0x1362 <vfprintf+0x332>
    135e:	98 2c       	mov	r9, r8
    1360:	21 2c       	mov	r2, r1
    1362:	a4 fe       	sbrs	r10, 4
    1364:	10 c0       	rjmp	.+32     	; 0x1386 <vfprintf+0x356>
    1366:	b6 01       	movw	r22, r12
    1368:	80 e3       	ldi	r24, 0x30	; 48
    136a:	90 e0       	ldi	r25, 0x00	; 0
    136c:	0e 94 41 0c 	call	0x1882	; 0x1882 <fputc>
    1370:	a2 fe       	sbrs	r10, 2
    1372:	17 c0       	rjmp	.+46     	; 0x13a2 <vfprintf+0x372>
    1374:	a1 fc       	sbrc	r10, 1
    1376:	03 c0       	rjmp	.+6      	; 0x137e <vfprintf+0x34e>
    1378:	88 e7       	ldi	r24, 0x78	; 120
    137a:	90 e0       	ldi	r25, 0x00	; 0
    137c:	02 c0       	rjmp	.+4      	; 0x1382 <vfprintf+0x352>
    137e:	88 e5       	ldi	r24, 0x58	; 88
    1380:	90 e0       	ldi	r25, 0x00	; 0
    1382:	b6 01       	movw	r22, r12
    1384:	0c c0       	rjmp	.+24     	; 0x139e <vfprintf+0x36e>
    1386:	8a 2d       	mov	r24, r10
    1388:	86 78       	andi	r24, 0x86	; 134
    138a:	59 f0       	breq	.+22     	; 0x13a2 <vfprintf+0x372>
    138c:	a1 fe       	sbrs	r10, 1
    138e:	02 c0       	rjmp	.+4      	; 0x1394 <vfprintf+0x364>
    1390:	8b e2       	ldi	r24, 0x2B	; 43
    1392:	01 c0       	rjmp	.+2      	; 0x1396 <vfprintf+0x366>
    1394:	80 e2       	ldi	r24, 0x20	; 32
    1396:	a7 fc       	sbrc	r10, 7
    1398:	8d e2       	ldi	r24, 0x2D	; 45
    139a:	b6 01       	movw	r22, r12
    139c:	90 e0       	ldi	r25, 0x00	; 0
    139e:	0e 94 41 0c 	call	0x1882	; 0x1882 <fputc>
    13a2:	89 14       	cp	r8, r9
    13a4:	38 f4       	brcc	.+14     	; 0x13b4 <vfprintf+0x384>
    13a6:	b6 01       	movw	r22, r12
    13a8:	80 e3       	ldi	r24, 0x30	; 48
    13aa:	90 e0       	ldi	r25, 0x00	; 0
    13ac:	0e 94 41 0c 	call	0x1882	; 0x1882 <fputc>
    13b0:	9a 94       	dec	r9
    13b2:	f7 cf       	rjmp	.-18     	; 0x13a2 <vfprintf+0x372>
    13b4:	8a 94       	dec	r8
    13b6:	f3 01       	movw	r30, r6
    13b8:	e8 0d       	add	r30, r8
    13ba:	f1 1d       	adc	r31, r1
    13bc:	80 81       	ld	r24, Z
    13be:	b6 01       	movw	r22, r12
    13c0:	90 e0       	ldi	r25, 0x00	; 0
    13c2:	0e 94 41 0c 	call	0x1882	; 0x1882 <fputc>
    13c6:	81 10       	cpse	r8, r1
    13c8:	f5 cf       	rjmp	.-22     	; 0x13b4 <vfprintf+0x384>
    13ca:	22 20       	and	r2, r2
    13cc:	09 f4       	brne	.+2      	; 0x13d0 <vfprintf+0x3a0>
    13ce:	42 ce       	rjmp	.-892    	; 0x1054 <vfprintf+0x24>
    13d0:	b6 01       	movw	r22, r12
    13d2:	80 e2       	ldi	r24, 0x20	; 32
    13d4:	90 e0       	ldi	r25, 0x00	; 0
    13d6:	0e 94 41 0c 	call	0x1882	; 0x1882 <fputc>
    13da:	2a 94       	dec	r2
    13dc:	f6 cf       	rjmp	.-20     	; 0x13ca <vfprintf+0x39a>
    13de:	f6 01       	movw	r30, r12
    13e0:	86 81       	ldd	r24, Z+6	; 0x06
    13e2:	97 81       	ldd	r25, Z+7	; 0x07
    13e4:	02 c0       	rjmp	.+4      	; 0x13ea <vfprintf+0x3ba>
    13e6:	8f ef       	ldi	r24, 0xFF	; 255
    13e8:	9f ef       	ldi	r25, 0xFF	; 255
    13ea:	2b 96       	adiw	r28, 0x0b	; 11
    13ec:	e2 e1       	ldi	r30, 0x12	; 18
    13ee:	0c 94 f7 0c 	jmp	0x19ee	; 0x19ee <__epilogue_restores__>

000013f2 <dtoa_prf>:
    13f2:	a9 e0       	ldi	r26, 0x09	; 9
    13f4:	b0 e0       	ldi	r27, 0x00	; 0
    13f6:	ef ef       	ldi	r30, 0xFF	; 255
    13f8:	f9 e0       	ldi	r31, 0x09	; 9
    13fa:	0c 94 e1 0c 	jmp	0x19c2	; 0x19c2 <__prologue_saves__+0xc>
    13fe:	6a 01       	movw	r12, r20
    1400:	12 2f       	mov	r17, r18
    1402:	b0 2e       	mov	r11, r16
    1404:	2b e3       	ldi	r18, 0x3B	; 59
    1406:	20 17       	cp	r18, r16
    1408:	20 f0       	brcs	.+8      	; 0x1412 <dtoa_prf+0x20>
    140a:	ff 24       	eor	r15, r15
    140c:	f3 94       	inc	r15
    140e:	f0 0e       	add	r15, r16
    1410:	02 c0       	rjmp	.+4      	; 0x1416 <dtoa_prf+0x24>
    1412:	2c e3       	ldi	r18, 0x3C	; 60
    1414:	f2 2e       	mov	r15, r18
    1416:	0f 2d       	mov	r16, r15
    1418:	27 e0       	ldi	r18, 0x07	; 7
    141a:	ae 01       	movw	r20, r28
    141c:	4f 5f       	subi	r20, 0xFF	; 255
    141e:	5f 4f       	sbci	r21, 0xFF	; 255
    1420:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <__ftoa_engine>
    1424:	bc 01       	movw	r22, r24
    1426:	49 81       	ldd	r20, Y+1	; 0x01
    1428:	84 2f       	mov	r24, r20
    142a:	89 70       	andi	r24, 0x09	; 9
    142c:	81 30       	cpi	r24, 0x01	; 1
    142e:	31 f0       	breq	.+12     	; 0x143c <dtoa_prf+0x4a>
    1430:	e1 fc       	sbrc	r14, 1
    1432:	06 c0       	rjmp	.+12     	; 0x1440 <dtoa_prf+0x4e>
    1434:	e0 fe       	sbrs	r14, 0
    1436:	06 c0       	rjmp	.+12     	; 0x1444 <dtoa_prf+0x52>
    1438:	90 e2       	ldi	r25, 0x20	; 32
    143a:	05 c0       	rjmp	.+10     	; 0x1446 <dtoa_prf+0x54>
    143c:	9d e2       	ldi	r25, 0x2D	; 45
    143e:	03 c0       	rjmp	.+6      	; 0x1446 <dtoa_prf+0x54>
    1440:	9b e2       	ldi	r25, 0x2B	; 43
    1442:	01 c0       	rjmp	.+2      	; 0x1446 <dtoa_prf+0x54>
    1444:	90 e0       	ldi	r25, 0x00	; 0
    1446:	5e 2d       	mov	r21, r14
    1448:	50 71       	andi	r21, 0x10	; 16
    144a:	43 ff       	sbrs	r20, 3
    144c:	3c c0       	rjmp	.+120    	; 0x14c6 <dtoa_prf+0xd4>
    144e:	91 11       	cpse	r25, r1
    1450:	02 c0       	rjmp	.+4      	; 0x1456 <dtoa_prf+0x64>
    1452:	83 e0       	ldi	r24, 0x03	; 3
    1454:	01 c0       	rjmp	.+2      	; 0x1458 <dtoa_prf+0x66>
    1456:	84 e0       	ldi	r24, 0x04	; 4
    1458:	81 17       	cp	r24, r17
    145a:	18 f4       	brcc	.+6      	; 0x1462 <dtoa_prf+0x70>
    145c:	21 2f       	mov	r18, r17
    145e:	28 1b       	sub	r18, r24
    1460:	01 c0       	rjmp	.+2      	; 0x1464 <dtoa_prf+0x72>
    1462:	20 e0       	ldi	r18, 0x00	; 0
    1464:	51 11       	cpse	r21, r1
    1466:	0b c0       	rjmp	.+22     	; 0x147e <dtoa_prf+0x8c>
    1468:	f6 01       	movw	r30, r12
    146a:	82 2f       	mov	r24, r18
    146c:	30 e2       	ldi	r19, 0x20	; 32
    146e:	88 23       	and	r24, r24
    1470:	19 f0       	breq	.+6      	; 0x1478 <dtoa_prf+0x86>
    1472:	31 93       	st	Z+, r19
    1474:	81 50       	subi	r24, 0x01	; 1
    1476:	fb cf       	rjmp	.-10     	; 0x146e <dtoa_prf+0x7c>
    1478:	c2 0e       	add	r12, r18
    147a:	d1 1c       	adc	r13, r1
    147c:	20 e0       	ldi	r18, 0x00	; 0
    147e:	99 23       	and	r25, r25
    1480:	29 f0       	breq	.+10     	; 0x148c <dtoa_prf+0x9a>
    1482:	d6 01       	movw	r26, r12
    1484:	9c 93       	st	X, r25
    1486:	f6 01       	movw	r30, r12
    1488:	31 96       	adiw	r30, 0x01	; 1
    148a:	6f 01       	movw	r12, r30
    148c:	c6 01       	movw	r24, r12
    148e:	03 96       	adiw	r24, 0x03	; 3
    1490:	e2 fe       	sbrs	r14, 2
    1492:	0a c0       	rjmp	.+20     	; 0x14a8 <dtoa_prf+0xb6>
    1494:	3e e4       	ldi	r19, 0x4E	; 78
    1496:	d6 01       	movw	r26, r12
    1498:	3c 93       	st	X, r19
    149a:	41 e4       	ldi	r20, 0x41	; 65
    149c:	11 96       	adiw	r26, 0x01	; 1
    149e:	4c 93       	st	X, r20
    14a0:	11 97       	sbiw	r26, 0x01	; 1
    14a2:	12 96       	adiw	r26, 0x02	; 2
    14a4:	3c 93       	st	X, r19
    14a6:	06 c0       	rjmp	.+12     	; 0x14b4 <dtoa_prf+0xc2>
    14a8:	3e e6       	ldi	r19, 0x6E	; 110
    14aa:	f6 01       	movw	r30, r12
    14ac:	30 83       	st	Z, r19
    14ae:	41 e6       	ldi	r20, 0x61	; 97
    14b0:	41 83       	std	Z+1, r20	; 0x01
    14b2:	32 83       	std	Z+2, r19	; 0x02
    14b4:	fc 01       	movw	r30, r24
    14b6:	32 2f       	mov	r19, r18
    14b8:	40 e2       	ldi	r20, 0x20	; 32
    14ba:	33 23       	and	r19, r19
    14bc:	09 f4       	brne	.+2      	; 0x14c0 <dtoa_prf+0xce>
    14be:	42 c0       	rjmp	.+132    	; 0x1544 <dtoa_prf+0x152>
    14c0:	41 93       	st	Z+, r20
    14c2:	31 50       	subi	r19, 0x01	; 1
    14c4:	fa cf       	rjmp	.-12     	; 0x14ba <dtoa_prf+0xc8>
    14c6:	42 ff       	sbrs	r20, 2
    14c8:	44 c0       	rjmp	.+136    	; 0x1552 <dtoa_prf+0x160>
    14ca:	91 11       	cpse	r25, r1
    14cc:	02 c0       	rjmp	.+4      	; 0x14d2 <dtoa_prf+0xe0>
    14ce:	83 e0       	ldi	r24, 0x03	; 3
    14d0:	01 c0       	rjmp	.+2      	; 0x14d4 <dtoa_prf+0xe2>
    14d2:	84 e0       	ldi	r24, 0x04	; 4
    14d4:	81 17       	cp	r24, r17
    14d6:	18 f4       	brcc	.+6      	; 0x14de <dtoa_prf+0xec>
    14d8:	21 2f       	mov	r18, r17
    14da:	28 1b       	sub	r18, r24
    14dc:	01 c0       	rjmp	.+2      	; 0x14e0 <dtoa_prf+0xee>
    14de:	20 e0       	ldi	r18, 0x00	; 0
    14e0:	51 11       	cpse	r21, r1
    14e2:	0b c0       	rjmp	.+22     	; 0x14fa <dtoa_prf+0x108>
    14e4:	f6 01       	movw	r30, r12
    14e6:	82 2f       	mov	r24, r18
    14e8:	30 e2       	ldi	r19, 0x20	; 32
    14ea:	88 23       	and	r24, r24
    14ec:	19 f0       	breq	.+6      	; 0x14f4 <dtoa_prf+0x102>
    14ee:	31 93       	st	Z+, r19
    14f0:	81 50       	subi	r24, 0x01	; 1
    14f2:	fb cf       	rjmp	.-10     	; 0x14ea <dtoa_prf+0xf8>
    14f4:	c2 0e       	add	r12, r18
    14f6:	d1 1c       	adc	r13, r1
    14f8:	20 e0       	ldi	r18, 0x00	; 0
    14fa:	99 23       	and	r25, r25
    14fc:	29 f0       	breq	.+10     	; 0x1508 <dtoa_prf+0x116>
    14fe:	d6 01       	movw	r26, r12
    1500:	9c 93       	st	X, r25
    1502:	f6 01       	movw	r30, r12
    1504:	31 96       	adiw	r30, 0x01	; 1
    1506:	6f 01       	movw	r12, r30
    1508:	c6 01       	movw	r24, r12
    150a:	03 96       	adiw	r24, 0x03	; 3
    150c:	e2 fe       	sbrs	r14, 2
    150e:	0b c0       	rjmp	.+22     	; 0x1526 <dtoa_prf+0x134>
    1510:	39 e4       	ldi	r19, 0x49	; 73
    1512:	d6 01       	movw	r26, r12
    1514:	3c 93       	st	X, r19
    1516:	3e e4       	ldi	r19, 0x4E	; 78
    1518:	11 96       	adiw	r26, 0x01	; 1
    151a:	3c 93       	st	X, r19
    151c:	11 97       	sbiw	r26, 0x01	; 1
    151e:	36 e4       	ldi	r19, 0x46	; 70
    1520:	12 96       	adiw	r26, 0x02	; 2
    1522:	3c 93       	st	X, r19
    1524:	07 c0       	rjmp	.+14     	; 0x1534 <dtoa_prf+0x142>
    1526:	39 e6       	ldi	r19, 0x69	; 105
    1528:	f6 01       	movw	r30, r12
    152a:	30 83       	st	Z, r19
    152c:	3e e6       	ldi	r19, 0x6E	; 110
    152e:	31 83       	std	Z+1, r19	; 0x01
    1530:	36 e6       	ldi	r19, 0x66	; 102
    1532:	32 83       	std	Z+2, r19	; 0x02
    1534:	fc 01       	movw	r30, r24
    1536:	32 2f       	mov	r19, r18
    1538:	40 e2       	ldi	r20, 0x20	; 32
    153a:	33 23       	and	r19, r19
    153c:	19 f0       	breq	.+6      	; 0x1544 <dtoa_prf+0x152>
    153e:	41 93       	st	Z+, r20
    1540:	31 50       	subi	r19, 0x01	; 1
    1542:	fb cf       	rjmp	.-10     	; 0x153a <dtoa_prf+0x148>
    1544:	fc 01       	movw	r30, r24
    1546:	e2 0f       	add	r30, r18
    1548:	f1 1d       	adc	r31, r1
    154a:	10 82       	st	Z, r1
    154c:	8e ef       	ldi	r24, 0xFE	; 254
    154e:	9f ef       	ldi	r25, 0xFF	; 255
    1550:	a6 c0       	rjmp	.+332    	; 0x169e <dtoa_prf+0x2ac>
    1552:	21 e0       	ldi	r18, 0x01	; 1
    1554:	30 e0       	ldi	r19, 0x00	; 0
    1556:	91 11       	cpse	r25, r1
    1558:	02 c0       	rjmp	.+4      	; 0x155e <dtoa_prf+0x16c>
    155a:	20 e0       	ldi	r18, 0x00	; 0
    155c:	30 e0       	ldi	r19, 0x00	; 0
    155e:	16 16       	cp	r1, r22
    1560:	17 06       	cpc	r1, r23
    1562:	1c f4       	brge	.+6      	; 0x156a <dtoa_prf+0x178>
    1564:	fb 01       	movw	r30, r22
    1566:	31 96       	adiw	r30, 0x01	; 1
    1568:	02 c0       	rjmp	.+4      	; 0x156e <dtoa_prf+0x17c>
    156a:	e1 e0       	ldi	r30, 0x01	; 1
    156c:	f0 e0       	ldi	r31, 0x00	; 0
    156e:	2e 0f       	add	r18, r30
    1570:	3f 1f       	adc	r19, r31
    1572:	bb 20       	and	r11, r11
    1574:	21 f0       	breq	.+8      	; 0x157e <dtoa_prf+0x18c>
    1576:	eb 2d       	mov	r30, r11
    1578:	f0 e0       	ldi	r31, 0x00	; 0
    157a:	31 96       	adiw	r30, 0x01	; 1
    157c:	02 c0       	rjmp	.+4      	; 0x1582 <dtoa_prf+0x190>
    157e:	e0 e0       	ldi	r30, 0x00	; 0
    1580:	f0 e0       	ldi	r31, 0x00	; 0
    1582:	2e 0f       	add	r18, r30
    1584:	3f 1f       	adc	r19, r31
    1586:	e1 2f       	mov	r30, r17
    1588:	f0 e0       	ldi	r31, 0x00	; 0
    158a:	2e 17       	cp	r18, r30
    158c:	3f 07       	cpc	r19, r31
    158e:	1c f4       	brge	.+6      	; 0x1596 <dtoa_prf+0x1a4>
    1590:	12 1b       	sub	r17, r18
    1592:	21 2f       	mov	r18, r17
    1594:	01 c0       	rjmp	.+2      	; 0x1598 <dtoa_prf+0x1a6>
    1596:	20 e0       	ldi	r18, 0x00	; 0
    1598:	8e 2d       	mov	r24, r14
    159a:	88 71       	andi	r24, 0x18	; 24
    159c:	59 f4       	brne	.+22     	; 0x15b4 <dtoa_prf+0x1c2>
    159e:	f6 01       	movw	r30, r12
    15a0:	82 2f       	mov	r24, r18
    15a2:	30 e2       	ldi	r19, 0x20	; 32
    15a4:	88 23       	and	r24, r24
    15a6:	19 f0       	breq	.+6      	; 0x15ae <dtoa_prf+0x1bc>
    15a8:	31 93       	st	Z+, r19
    15aa:	81 50       	subi	r24, 0x01	; 1
    15ac:	fb cf       	rjmp	.-10     	; 0x15a4 <dtoa_prf+0x1b2>
    15ae:	c2 0e       	add	r12, r18
    15b0:	d1 1c       	adc	r13, r1
    15b2:	20 e0       	ldi	r18, 0x00	; 0
    15b4:	99 23       	and	r25, r25
    15b6:	29 f0       	breq	.+10     	; 0x15c2 <dtoa_prf+0x1d0>
    15b8:	d6 01       	movw	r26, r12
    15ba:	9c 93       	st	X, r25
    15bc:	f6 01       	movw	r30, r12
    15be:	31 96       	adiw	r30, 0x01	; 1
    15c0:	6f 01       	movw	r12, r30
    15c2:	51 11       	cpse	r21, r1
    15c4:	0b c0       	rjmp	.+22     	; 0x15dc <dtoa_prf+0x1ea>
    15c6:	f6 01       	movw	r30, r12
    15c8:	82 2f       	mov	r24, r18
    15ca:	90 e3       	ldi	r25, 0x30	; 48
    15cc:	88 23       	and	r24, r24
    15ce:	19 f0       	breq	.+6      	; 0x15d6 <dtoa_prf+0x1e4>
    15d0:	91 93       	st	Z+, r25
    15d2:	81 50       	subi	r24, 0x01	; 1
    15d4:	fb cf       	rjmp	.-10     	; 0x15cc <dtoa_prf+0x1da>
    15d6:	c2 0e       	add	r12, r18
    15d8:	d1 1c       	adc	r13, r1
    15da:	20 e0       	ldi	r18, 0x00	; 0
    15dc:	0f 2d       	mov	r16, r15
    15de:	06 0f       	add	r16, r22
    15e0:	9a 81       	ldd	r25, Y+2	; 0x02
    15e2:	34 2f       	mov	r19, r20
    15e4:	30 71       	andi	r19, 0x10	; 16
    15e6:	44 ff       	sbrs	r20, 4
    15e8:	03 c0       	rjmp	.+6      	; 0x15f0 <dtoa_prf+0x1fe>
    15ea:	91 33       	cpi	r25, 0x31	; 49
    15ec:	09 f4       	brne	.+2      	; 0x15f0 <dtoa_prf+0x1fe>
    15ee:	01 50       	subi	r16, 0x01	; 1
    15f0:	10 16       	cp	r1, r16
    15f2:	24 f4       	brge	.+8      	; 0x15fc <dtoa_prf+0x20a>
    15f4:	09 30       	cpi	r16, 0x09	; 9
    15f6:	18 f0       	brcs	.+6      	; 0x15fe <dtoa_prf+0x20c>
    15f8:	08 e0       	ldi	r16, 0x08	; 8
    15fa:	01 c0       	rjmp	.+2      	; 0x15fe <dtoa_prf+0x20c>
    15fc:	01 e0       	ldi	r16, 0x01	; 1
    15fe:	ab 01       	movw	r20, r22
    1600:	77 ff       	sbrs	r23, 7
    1602:	02 c0       	rjmp	.+4      	; 0x1608 <dtoa_prf+0x216>
    1604:	40 e0       	ldi	r20, 0x00	; 0
    1606:	50 e0       	ldi	r21, 0x00	; 0
    1608:	fb 01       	movw	r30, r22
    160a:	e4 1b       	sub	r30, r20
    160c:	f5 0b       	sbc	r31, r21
    160e:	a1 e0       	ldi	r26, 0x01	; 1
    1610:	b0 e0       	ldi	r27, 0x00	; 0
    1612:	ac 0f       	add	r26, r28
    1614:	bd 1f       	adc	r27, r29
    1616:	ea 0f       	add	r30, r26
    1618:	fb 1f       	adc	r31, r27
    161a:	8e e2       	ldi	r24, 0x2E	; 46
    161c:	a8 2e       	mov	r10, r24
    161e:	4b 01       	movw	r8, r22
    1620:	80 1a       	sub	r8, r16
    1622:	91 08       	sbc	r9, r1
    1624:	0b 2d       	mov	r16, r11
    1626:	10 e0       	ldi	r17, 0x00	; 0
    1628:	11 95       	neg	r17
    162a:	01 95       	neg	r16
    162c:	11 09       	sbc	r17, r1
    162e:	4f 3f       	cpi	r20, 0xFF	; 255
    1630:	bf ef       	ldi	r27, 0xFF	; 255
    1632:	5b 07       	cpc	r21, r27
    1634:	21 f4       	brne	.+8      	; 0x163e <dtoa_prf+0x24c>
    1636:	d6 01       	movw	r26, r12
    1638:	ac 92       	st	X, r10
    163a:	11 96       	adiw	r26, 0x01	; 1
    163c:	6d 01       	movw	r12, r26
    163e:	64 17       	cp	r22, r20
    1640:	75 07       	cpc	r23, r21
    1642:	2c f0       	brlt	.+10     	; 0x164e <dtoa_prf+0x25c>
    1644:	84 16       	cp	r8, r20
    1646:	95 06       	cpc	r9, r21
    1648:	14 f4       	brge	.+4      	; 0x164e <dtoa_prf+0x25c>
    164a:	81 81       	ldd	r24, Z+1	; 0x01
    164c:	01 c0       	rjmp	.+2      	; 0x1650 <dtoa_prf+0x25e>
    164e:	80 e3       	ldi	r24, 0x30	; 48
    1650:	41 50       	subi	r20, 0x01	; 1
    1652:	51 09       	sbc	r21, r1
    1654:	31 96       	adiw	r30, 0x01	; 1
    1656:	d6 01       	movw	r26, r12
    1658:	11 96       	adiw	r26, 0x01	; 1
    165a:	7d 01       	movw	r14, r26
    165c:	40 17       	cp	r20, r16
    165e:	51 07       	cpc	r21, r17
    1660:	24 f0       	brlt	.+8      	; 0x166a <dtoa_prf+0x278>
    1662:	d6 01       	movw	r26, r12
    1664:	8c 93       	st	X, r24
    1666:	67 01       	movw	r12, r14
    1668:	e2 cf       	rjmp	.-60     	; 0x162e <dtoa_prf+0x23c>
    166a:	64 17       	cp	r22, r20
    166c:	75 07       	cpc	r23, r21
    166e:	39 f4       	brne	.+14     	; 0x167e <dtoa_prf+0x28c>
    1670:	96 33       	cpi	r25, 0x36	; 54
    1672:	20 f4       	brcc	.+8      	; 0x167c <dtoa_prf+0x28a>
    1674:	95 33       	cpi	r25, 0x35	; 53
    1676:	19 f4       	brne	.+6      	; 0x167e <dtoa_prf+0x28c>
    1678:	31 11       	cpse	r19, r1
    167a:	01 c0       	rjmp	.+2      	; 0x167e <dtoa_prf+0x28c>
    167c:	81 e3       	ldi	r24, 0x31	; 49
    167e:	f6 01       	movw	r30, r12
    1680:	80 83       	st	Z, r24
    1682:	f7 01       	movw	r30, r14
    1684:	82 2f       	mov	r24, r18
    1686:	90 e2       	ldi	r25, 0x20	; 32
    1688:	88 23       	and	r24, r24
    168a:	19 f0       	breq	.+6      	; 0x1692 <dtoa_prf+0x2a0>
    168c:	91 93       	st	Z+, r25
    168e:	81 50       	subi	r24, 0x01	; 1
    1690:	fb cf       	rjmp	.-10     	; 0x1688 <dtoa_prf+0x296>
    1692:	f7 01       	movw	r30, r14
    1694:	e2 0f       	add	r30, r18
    1696:	f1 1d       	adc	r31, r1
    1698:	10 82       	st	Z, r1
    169a:	80 e0       	ldi	r24, 0x00	; 0
    169c:	90 e0       	ldi	r25, 0x00	; 0
    169e:	29 96       	adiw	r28, 0x09	; 9
    16a0:	ec e0       	ldi	r30, 0x0C	; 12
    16a2:	0c 94 fd 0c 	jmp	0x19fa	; 0x19fa <__epilogue_restores__+0xc>

000016a6 <__ftoa_engine>:
    16a6:	28 30       	cpi	r18, 0x08	; 8
    16a8:	08 f0       	brcs	.+2      	; 0x16ac <__ftoa_engine+0x6>
    16aa:	27 e0       	ldi	r18, 0x07	; 7
    16ac:	33 27       	eor	r19, r19
    16ae:	da 01       	movw	r26, r20
    16b0:	99 0f       	add	r25, r25
    16b2:	31 1d       	adc	r19, r1
    16b4:	87 fd       	sbrc	r24, 7
    16b6:	91 60       	ori	r25, 0x01	; 1
    16b8:	00 96       	adiw	r24, 0x00	; 0
    16ba:	61 05       	cpc	r22, r1
    16bc:	71 05       	cpc	r23, r1
    16be:	39 f4       	brne	.+14     	; 0x16ce <__ftoa_engine+0x28>
    16c0:	32 60       	ori	r19, 0x02	; 2
    16c2:	2e 5f       	subi	r18, 0xFE	; 254
    16c4:	3d 93       	st	X+, r19
    16c6:	30 e3       	ldi	r19, 0x30	; 48
    16c8:	2a 95       	dec	r18
    16ca:	e1 f7       	brne	.-8      	; 0x16c4 <__ftoa_engine+0x1e>
    16cc:	08 95       	ret
    16ce:	9f 3f       	cpi	r25, 0xFF	; 255
    16d0:	30 f0       	brcs	.+12     	; 0x16de <__ftoa_engine+0x38>
    16d2:	80 38       	cpi	r24, 0x80	; 128
    16d4:	71 05       	cpc	r23, r1
    16d6:	61 05       	cpc	r22, r1
    16d8:	09 f0       	breq	.+2      	; 0x16dc <__ftoa_engine+0x36>
    16da:	3c 5f       	subi	r19, 0xFC	; 252
    16dc:	3c 5f       	subi	r19, 0xFC	; 252
    16de:	3d 93       	st	X+, r19
    16e0:	91 30       	cpi	r25, 0x01	; 1
    16e2:	08 f0       	brcs	.+2      	; 0x16e6 <__ftoa_engine+0x40>
    16e4:	80 68       	ori	r24, 0x80	; 128
    16e6:	91 1d       	adc	r25, r1
    16e8:	df 93       	push	r29
    16ea:	cf 93       	push	r28
    16ec:	1f 93       	push	r17
    16ee:	0f 93       	push	r16
    16f0:	ff 92       	push	r15
    16f2:	ef 92       	push	r14
    16f4:	19 2f       	mov	r17, r25
    16f6:	98 7f       	andi	r25, 0xF8	; 248
    16f8:	96 95       	lsr	r25
    16fa:	e9 2f       	mov	r30, r25
    16fc:	96 95       	lsr	r25
    16fe:	96 95       	lsr	r25
    1700:	e9 0f       	add	r30, r25
    1702:	ff 27       	eor	r31, r31
    1704:	e0 51       	subi	r30, 0x10	; 16
    1706:	ff 4f       	sbci	r31, 0xFF	; 255
    1708:	99 27       	eor	r25, r25
    170a:	33 27       	eor	r19, r19
    170c:	ee 24       	eor	r14, r14
    170e:	ff 24       	eor	r15, r15
    1710:	a7 01       	movw	r20, r14
    1712:	e7 01       	movw	r28, r14
    1714:	05 90       	lpm	r0, Z+
    1716:	08 94       	sec
    1718:	07 94       	ror	r0
    171a:	28 f4       	brcc	.+10     	; 0x1726 <__ftoa_engine+0x80>
    171c:	36 0f       	add	r19, r22
    171e:	e7 1e       	adc	r14, r23
    1720:	f8 1e       	adc	r15, r24
    1722:	49 1f       	adc	r20, r25
    1724:	51 1d       	adc	r21, r1
    1726:	66 0f       	add	r22, r22
    1728:	77 1f       	adc	r23, r23
    172a:	88 1f       	adc	r24, r24
    172c:	99 1f       	adc	r25, r25
    172e:	06 94       	lsr	r0
    1730:	a1 f7       	brne	.-24     	; 0x171a <__ftoa_engine+0x74>
    1732:	05 90       	lpm	r0, Z+
    1734:	07 94       	ror	r0
    1736:	28 f4       	brcc	.+10     	; 0x1742 <__ftoa_engine+0x9c>
    1738:	e7 0e       	add	r14, r23
    173a:	f8 1e       	adc	r15, r24
    173c:	49 1f       	adc	r20, r25
    173e:	56 1f       	adc	r21, r22
    1740:	c1 1d       	adc	r28, r1
    1742:	77 0f       	add	r23, r23
    1744:	88 1f       	adc	r24, r24
    1746:	99 1f       	adc	r25, r25
    1748:	66 1f       	adc	r22, r22
    174a:	06 94       	lsr	r0
    174c:	a1 f7       	brne	.-24     	; 0x1736 <__ftoa_engine+0x90>
    174e:	05 90       	lpm	r0, Z+
    1750:	07 94       	ror	r0
    1752:	28 f4       	brcc	.+10     	; 0x175e <__ftoa_engine+0xb8>
    1754:	f8 0e       	add	r15, r24
    1756:	49 1f       	adc	r20, r25
    1758:	56 1f       	adc	r21, r22
    175a:	c7 1f       	adc	r28, r23
    175c:	d1 1d       	adc	r29, r1
    175e:	88 0f       	add	r24, r24
    1760:	99 1f       	adc	r25, r25
    1762:	66 1f       	adc	r22, r22
    1764:	77 1f       	adc	r23, r23
    1766:	06 94       	lsr	r0
    1768:	a1 f7       	brne	.-24     	; 0x1752 <__ftoa_engine+0xac>
    176a:	05 90       	lpm	r0, Z+
    176c:	07 94       	ror	r0
    176e:	20 f4       	brcc	.+8      	; 0x1778 <__ftoa_engine+0xd2>
    1770:	49 0f       	add	r20, r25
    1772:	56 1f       	adc	r21, r22
    1774:	c7 1f       	adc	r28, r23
    1776:	d8 1f       	adc	r29, r24
    1778:	99 0f       	add	r25, r25
    177a:	66 1f       	adc	r22, r22
    177c:	77 1f       	adc	r23, r23
    177e:	88 1f       	adc	r24, r24
    1780:	06 94       	lsr	r0
    1782:	a9 f7       	brne	.-22     	; 0x176e <__ftoa_engine+0xc8>
    1784:	84 91       	lpm	r24, Z
    1786:	10 95       	com	r17
    1788:	17 70       	andi	r17, 0x07	; 7
    178a:	41 f0       	breq	.+16     	; 0x179c <__ftoa_engine+0xf6>
    178c:	d6 95       	lsr	r29
    178e:	c7 95       	ror	r28
    1790:	57 95       	ror	r21
    1792:	47 95       	ror	r20
    1794:	f7 94       	ror	r15
    1796:	e7 94       	ror	r14
    1798:	1a 95       	dec	r17
    179a:	c1 f7       	brne	.-16     	; 0x178c <__ftoa_engine+0xe6>
    179c:	e6 e9       	ldi	r30, 0x96	; 150
    179e:	f0 e0       	ldi	r31, 0x00	; 0
    17a0:	68 94       	set
    17a2:	15 90       	lpm	r1, Z+
    17a4:	15 91       	lpm	r17, Z+
    17a6:	35 91       	lpm	r19, Z+
    17a8:	65 91       	lpm	r22, Z+
    17aa:	95 91       	lpm	r25, Z+
    17ac:	05 90       	lpm	r0, Z+
    17ae:	7f e2       	ldi	r23, 0x2F	; 47
    17b0:	73 95       	inc	r23
    17b2:	e1 18       	sub	r14, r1
    17b4:	f1 0a       	sbc	r15, r17
    17b6:	43 0b       	sbc	r20, r19
    17b8:	56 0b       	sbc	r21, r22
    17ba:	c9 0b       	sbc	r28, r25
    17bc:	d0 09       	sbc	r29, r0
    17be:	c0 f7       	brcc	.-16     	; 0x17b0 <__ftoa_engine+0x10a>
    17c0:	e1 0c       	add	r14, r1
    17c2:	f1 1e       	adc	r15, r17
    17c4:	43 1f       	adc	r20, r19
    17c6:	56 1f       	adc	r21, r22
    17c8:	c9 1f       	adc	r28, r25
    17ca:	d0 1d       	adc	r29, r0
    17cc:	7e f4       	brtc	.+30     	; 0x17ec <__ftoa_engine+0x146>
    17ce:	70 33       	cpi	r23, 0x30	; 48
    17d0:	11 f4       	brne	.+4      	; 0x17d6 <__ftoa_engine+0x130>
    17d2:	8a 95       	dec	r24
    17d4:	e6 cf       	rjmp	.-52     	; 0x17a2 <__ftoa_engine+0xfc>
    17d6:	e8 94       	clt
    17d8:	01 50       	subi	r16, 0x01	; 1
    17da:	30 f0       	brcs	.+12     	; 0x17e8 <__ftoa_engine+0x142>
    17dc:	08 0f       	add	r16, r24
    17de:	0a f4       	brpl	.+2      	; 0x17e2 <__ftoa_engine+0x13c>
    17e0:	00 27       	eor	r16, r16
    17e2:	02 17       	cp	r16, r18
    17e4:	08 f4       	brcc	.+2      	; 0x17e8 <__ftoa_engine+0x142>
    17e6:	20 2f       	mov	r18, r16
    17e8:	23 95       	inc	r18
    17ea:	02 2f       	mov	r16, r18
    17ec:	7a 33       	cpi	r23, 0x3A	; 58
    17ee:	28 f0       	brcs	.+10     	; 0x17fa <__ftoa_engine+0x154>
    17f0:	79 e3       	ldi	r23, 0x39	; 57
    17f2:	7d 93       	st	X+, r23
    17f4:	2a 95       	dec	r18
    17f6:	e9 f7       	brne	.-6      	; 0x17f2 <__ftoa_engine+0x14c>
    17f8:	10 c0       	rjmp	.+32     	; 0x181a <__ftoa_engine+0x174>
    17fa:	7d 93       	st	X+, r23
    17fc:	2a 95       	dec	r18
    17fe:	89 f6       	brne	.-94     	; 0x17a2 <__ftoa_engine+0xfc>
    1800:	06 94       	lsr	r0
    1802:	97 95       	ror	r25
    1804:	67 95       	ror	r22
    1806:	37 95       	ror	r19
    1808:	17 95       	ror	r17
    180a:	17 94       	ror	r1
    180c:	e1 18       	sub	r14, r1
    180e:	f1 0a       	sbc	r15, r17
    1810:	43 0b       	sbc	r20, r19
    1812:	56 0b       	sbc	r21, r22
    1814:	c9 0b       	sbc	r28, r25
    1816:	d0 09       	sbc	r29, r0
    1818:	98 f0       	brcs	.+38     	; 0x1840 <__ftoa_engine+0x19a>
    181a:	23 95       	inc	r18
    181c:	7e 91       	ld	r23, -X
    181e:	73 95       	inc	r23
    1820:	7a 33       	cpi	r23, 0x3A	; 58
    1822:	08 f0       	brcs	.+2      	; 0x1826 <__ftoa_engine+0x180>
    1824:	70 e3       	ldi	r23, 0x30	; 48
    1826:	7c 93       	st	X, r23
    1828:	20 13       	cpse	r18, r16
    182a:	b8 f7       	brcc	.-18     	; 0x181a <__ftoa_engine+0x174>
    182c:	7e 91       	ld	r23, -X
    182e:	70 61       	ori	r23, 0x10	; 16
    1830:	7d 93       	st	X+, r23
    1832:	30 f0       	brcs	.+12     	; 0x1840 <__ftoa_engine+0x19a>
    1834:	83 95       	inc	r24
    1836:	71 e3       	ldi	r23, 0x31	; 49
    1838:	7d 93       	st	X+, r23
    183a:	70 e3       	ldi	r23, 0x30	; 48
    183c:	2a 95       	dec	r18
    183e:	e1 f7       	brne	.-8      	; 0x1838 <__ftoa_engine+0x192>
    1840:	11 24       	eor	r1, r1
    1842:	ef 90       	pop	r14
    1844:	ff 90       	pop	r15
    1846:	0f 91       	pop	r16
    1848:	1f 91       	pop	r17
    184a:	cf 91       	pop	r28
    184c:	df 91       	pop	r29
    184e:	99 27       	eor	r25, r25
    1850:	87 fd       	sbrc	r24, 7
    1852:	90 95       	com	r25
    1854:	08 95       	ret

00001856 <strnlen_P>:
    1856:	fc 01       	movw	r30, r24
    1858:	05 90       	lpm	r0, Z+
    185a:	61 50       	subi	r22, 0x01	; 1
    185c:	70 40       	sbci	r23, 0x00	; 0
    185e:	01 10       	cpse	r0, r1
    1860:	d8 f7       	brcc	.-10     	; 0x1858 <strnlen_P+0x2>
    1862:	80 95       	com	r24
    1864:	90 95       	com	r25
    1866:	8e 0f       	add	r24, r30
    1868:	9f 1f       	adc	r25, r31
    186a:	08 95       	ret

0000186c <strnlen>:
    186c:	fc 01       	movw	r30, r24
    186e:	61 50       	subi	r22, 0x01	; 1
    1870:	70 40       	sbci	r23, 0x00	; 0
    1872:	01 90       	ld	r0, Z+
    1874:	01 10       	cpse	r0, r1
    1876:	d8 f7       	brcc	.-10     	; 0x186e <strnlen+0x2>
    1878:	80 95       	com	r24
    187a:	90 95       	com	r25
    187c:	8e 0f       	add	r24, r30
    187e:	9f 1f       	adc	r25, r31
    1880:	08 95       	ret

00001882 <fputc>:
    1882:	0f 93       	push	r16
    1884:	1f 93       	push	r17
    1886:	cf 93       	push	r28
    1888:	df 93       	push	r29
    188a:	fb 01       	movw	r30, r22
    188c:	23 81       	ldd	r18, Z+3	; 0x03
    188e:	21 fd       	sbrc	r18, 1
    1890:	03 c0       	rjmp	.+6      	; 0x1898 <fputc+0x16>
    1892:	8f ef       	ldi	r24, 0xFF	; 255
    1894:	9f ef       	ldi	r25, 0xFF	; 255
    1896:	2c c0       	rjmp	.+88     	; 0x18f0 <fputc+0x6e>
    1898:	22 ff       	sbrs	r18, 2
    189a:	16 c0       	rjmp	.+44     	; 0x18c8 <fputc+0x46>
    189c:	46 81       	ldd	r20, Z+6	; 0x06
    189e:	57 81       	ldd	r21, Z+7	; 0x07
    18a0:	24 81       	ldd	r18, Z+4	; 0x04
    18a2:	35 81       	ldd	r19, Z+5	; 0x05
    18a4:	42 17       	cp	r20, r18
    18a6:	53 07       	cpc	r21, r19
    18a8:	44 f4       	brge	.+16     	; 0x18ba <fputc+0x38>
    18aa:	a0 81       	ld	r26, Z
    18ac:	b1 81       	ldd	r27, Z+1	; 0x01
    18ae:	9d 01       	movw	r18, r26
    18b0:	2f 5f       	subi	r18, 0xFF	; 255
    18b2:	3f 4f       	sbci	r19, 0xFF	; 255
    18b4:	31 83       	std	Z+1, r19	; 0x01
    18b6:	20 83       	st	Z, r18
    18b8:	8c 93       	st	X, r24
    18ba:	26 81       	ldd	r18, Z+6	; 0x06
    18bc:	37 81       	ldd	r19, Z+7	; 0x07
    18be:	2f 5f       	subi	r18, 0xFF	; 255
    18c0:	3f 4f       	sbci	r19, 0xFF	; 255
    18c2:	37 83       	std	Z+7, r19	; 0x07
    18c4:	26 83       	std	Z+6, r18	; 0x06
    18c6:	14 c0       	rjmp	.+40     	; 0x18f0 <fputc+0x6e>
    18c8:	8b 01       	movw	r16, r22
    18ca:	ec 01       	movw	r28, r24
    18cc:	fb 01       	movw	r30, r22
    18ce:	00 84       	ldd	r0, Z+8	; 0x08
    18d0:	f1 85       	ldd	r31, Z+9	; 0x09
    18d2:	e0 2d       	mov	r30, r0
    18d4:	09 95       	icall
    18d6:	89 2b       	or	r24, r25
    18d8:	e1 f6       	brne	.-72     	; 0x1892 <fputc+0x10>
    18da:	d8 01       	movw	r26, r16
    18dc:	16 96       	adiw	r26, 0x06	; 6
    18de:	8d 91       	ld	r24, X+
    18e0:	9c 91       	ld	r25, X
    18e2:	17 97       	sbiw	r26, 0x07	; 7
    18e4:	01 96       	adiw	r24, 0x01	; 1
    18e6:	17 96       	adiw	r26, 0x07	; 7
    18e8:	9c 93       	st	X, r25
    18ea:	8e 93       	st	-X, r24
    18ec:	16 97       	sbiw	r26, 0x06	; 6
    18ee:	ce 01       	movw	r24, r28
    18f0:	df 91       	pop	r29
    18f2:	cf 91       	pop	r28
    18f4:	1f 91       	pop	r17
    18f6:	0f 91       	pop	r16
    18f8:	08 95       	ret

000018fa <__ultoa_invert>:
    18fa:	fa 01       	movw	r30, r20
    18fc:	aa 27       	eor	r26, r26
    18fe:	28 30       	cpi	r18, 0x08	; 8
    1900:	51 f1       	breq	.+84     	; 0x1956 <__ultoa_invert+0x5c>
    1902:	20 31       	cpi	r18, 0x10	; 16
    1904:	81 f1       	breq	.+96     	; 0x1966 <__ultoa_invert+0x6c>
    1906:	e8 94       	clt
    1908:	6f 93       	push	r22
    190a:	6e 7f       	andi	r22, 0xFE	; 254
    190c:	6e 5f       	subi	r22, 0xFE	; 254
    190e:	7f 4f       	sbci	r23, 0xFF	; 255
    1910:	8f 4f       	sbci	r24, 0xFF	; 255
    1912:	9f 4f       	sbci	r25, 0xFF	; 255
    1914:	af 4f       	sbci	r26, 0xFF	; 255
    1916:	b1 e0       	ldi	r27, 0x01	; 1
    1918:	3e d0       	rcall	.+124    	; 0x1996 <__ultoa_invert+0x9c>
    191a:	b4 e0       	ldi	r27, 0x04	; 4
    191c:	3c d0       	rcall	.+120    	; 0x1996 <__ultoa_invert+0x9c>
    191e:	67 0f       	add	r22, r23
    1920:	78 1f       	adc	r23, r24
    1922:	89 1f       	adc	r24, r25
    1924:	9a 1f       	adc	r25, r26
    1926:	a1 1d       	adc	r26, r1
    1928:	68 0f       	add	r22, r24
    192a:	79 1f       	adc	r23, r25
    192c:	8a 1f       	adc	r24, r26
    192e:	91 1d       	adc	r25, r1
    1930:	a1 1d       	adc	r26, r1
    1932:	6a 0f       	add	r22, r26
    1934:	71 1d       	adc	r23, r1
    1936:	81 1d       	adc	r24, r1
    1938:	91 1d       	adc	r25, r1
    193a:	a1 1d       	adc	r26, r1
    193c:	20 d0       	rcall	.+64     	; 0x197e <__ultoa_invert+0x84>
    193e:	09 f4       	brne	.+2      	; 0x1942 <__ultoa_invert+0x48>
    1940:	68 94       	set
    1942:	3f 91       	pop	r19
    1944:	2a e0       	ldi	r18, 0x0A	; 10
    1946:	26 9f       	mul	r18, r22
    1948:	11 24       	eor	r1, r1
    194a:	30 19       	sub	r19, r0
    194c:	30 5d       	subi	r19, 0xD0	; 208
    194e:	31 93       	st	Z+, r19
    1950:	de f6       	brtc	.-74     	; 0x1908 <__ultoa_invert+0xe>
    1952:	cf 01       	movw	r24, r30
    1954:	08 95       	ret
    1956:	46 2f       	mov	r20, r22
    1958:	47 70       	andi	r20, 0x07	; 7
    195a:	40 5d       	subi	r20, 0xD0	; 208
    195c:	41 93       	st	Z+, r20
    195e:	b3 e0       	ldi	r27, 0x03	; 3
    1960:	0f d0       	rcall	.+30     	; 0x1980 <__ultoa_invert+0x86>
    1962:	c9 f7       	brne	.-14     	; 0x1956 <__ultoa_invert+0x5c>
    1964:	f6 cf       	rjmp	.-20     	; 0x1952 <__ultoa_invert+0x58>
    1966:	46 2f       	mov	r20, r22
    1968:	4f 70       	andi	r20, 0x0F	; 15
    196a:	40 5d       	subi	r20, 0xD0	; 208
    196c:	4a 33       	cpi	r20, 0x3A	; 58
    196e:	18 f0       	brcs	.+6      	; 0x1976 <__ultoa_invert+0x7c>
    1970:	49 5d       	subi	r20, 0xD9	; 217
    1972:	31 fd       	sbrc	r19, 1
    1974:	40 52       	subi	r20, 0x20	; 32
    1976:	41 93       	st	Z+, r20
    1978:	02 d0       	rcall	.+4      	; 0x197e <__ultoa_invert+0x84>
    197a:	a9 f7       	brne	.-22     	; 0x1966 <__ultoa_invert+0x6c>
    197c:	ea cf       	rjmp	.-44     	; 0x1952 <__ultoa_invert+0x58>
    197e:	b4 e0       	ldi	r27, 0x04	; 4
    1980:	a6 95       	lsr	r26
    1982:	97 95       	ror	r25
    1984:	87 95       	ror	r24
    1986:	77 95       	ror	r23
    1988:	67 95       	ror	r22
    198a:	ba 95       	dec	r27
    198c:	c9 f7       	brne	.-14     	; 0x1980 <__ultoa_invert+0x86>
    198e:	00 97       	sbiw	r24, 0x00	; 0
    1990:	61 05       	cpc	r22, r1
    1992:	71 05       	cpc	r23, r1
    1994:	08 95       	ret
    1996:	9b 01       	movw	r18, r22
    1998:	ac 01       	movw	r20, r24
    199a:	0a 2e       	mov	r0, r26
    199c:	06 94       	lsr	r0
    199e:	57 95       	ror	r21
    19a0:	47 95       	ror	r20
    19a2:	37 95       	ror	r19
    19a4:	27 95       	ror	r18
    19a6:	ba 95       	dec	r27
    19a8:	c9 f7       	brne	.-14     	; 0x199c <__ultoa_invert+0xa2>
    19aa:	62 0f       	add	r22, r18
    19ac:	73 1f       	adc	r23, r19
    19ae:	84 1f       	adc	r24, r20
    19b0:	95 1f       	adc	r25, r21
    19b2:	a0 1d       	adc	r26, r0
    19b4:	08 95       	ret

000019b6 <__prologue_saves__>:
    19b6:	2f 92       	push	r2
    19b8:	3f 92       	push	r3
    19ba:	4f 92       	push	r4
    19bc:	5f 92       	push	r5
    19be:	6f 92       	push	r6
    19c0:	7f 92       	push	r7
    19c2:	8f 92       	push	r8
    19c4:	9f 92       	push	r9
    19c6:	af 92       	push	r10
    19c8:	bf 92       	push	r11
    19ca:	cf 92       	push	r12
    19cc:	df 92       	push	r13
    19ce:	ef 92       	push	r14
    19d0:	ff 92       	push	r15
    19d2:	0f 93       	push	r16
    19d4:	1f 93       	push	r17
    19d6:	cf 93       	push	r28
    19d8:	df 93       	push	r29
    19da:	cd b7       	in	r28, 0x3d	; 61
    19dc:	de b7       	in	r29, 0x3e	; 62
    19de:	ca 1b       	sub	r28, r26
    19e0:	db 0b       	sbc	r29, r27
    19e2:	0f b6       	in	r0, 0x3f	; 63
    19e4:	f8 94       	cli
    19e6:	de bf       	out	0x3e, r29	; 62
    19e8:	0f be       	out	0x3f, r0	; 63
    19ea:	cd bf       	out	0x3d, r28	; 61
    19ec:	09 94       	ijmp

000019ee <__epilogue_restores__>:
    19ee:	2a 88       	ldd	r2, Y+18	; 0x12
    19f0:	39 88       	ldd	r3, Y+17	; 0x11
    19f2:	48 88       	ldd	r4, Y+16	; 0x10
    19f4:	5f 84       	ldd	r5, Y+15	; 0x0f
    19f6:	6e 84       	ldd	r6, Y+14	; 0x0e
    19f8:	7d 84       	ldd	r7, Y+13	; 0x0d
    19fa:	8c 84       	ldd	r8, Y+12	; 0x0c
    19fc:	9b 84       	ldd	r9, Y+11	; 0x0b
    19fe:	aa 84       	ldd	r10, Y+10	; 0x0a
    1a00:	b9 84       	ldd	r11, Y+9	; 0x09
    1a02:	c8 84       	ldd	r12, Y+8	; 0x08
    1a04:	df 80       	ldd	r13, Y+7	; 0x07
    1a06:	ee 80       	ldd	r14, Y+6	; 0x06
    1a08:	fd 80       	ldd	r15, Y+5	; 0x05
    1a0a:	0c 81       	ldd	r16, Y+4	; 0x04
    1a0c:	1b 81       	ldd	r17, Y+3	; 0x03
    1a0e:	aa 81       	ldd	r26, Y+2	; 0x02
    1a10:	b9 81       	ldd	r27, Y+1	; 0x01
    1a12:	ce 0f       	add	r28, r30
    1a14:	d1 1d       	adc	r29, r1
    1a16:	0f b6       	in	r0, 0x3f	; 63
    1a18:	f8 94       	cli
    1a1a:	de bf       	out	0x3e, r29	; 62
    1a1c:	0f be       	out	0x3f, r0	; 63
    1a1e:	cd bf       	out	0x3d, r28	; 61
    1a20:	ed 01       	movw	r28, r26
    1a22:	08 95       	ret

00001a24 <_exit>:
    1a24:	f8 94       	cli

00001a26 <__stop_program>:
    1a26:	ff cf       	rjmp	.-2      	; 0x1a26 <__stop_program>
